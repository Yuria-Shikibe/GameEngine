export module UI.Icons:Assets;
export import UI.RegionDrawable;
import Graphic.TextureAtlas;
import ext.Heterogeneous;
import std;
namespace UI::Icons{
export Icon keyboard_0{};
export Icon sort_amount_down{};
export Icon keyboard_0_outline{};
export Icon keyboard_1{};
export Icon keyboard_1_outline{};
export Icon keyboard_2{};
export Icon keyboard_2_outline{};
export Icon keyboard_3{};
export Icon keyboard_3_outline{};
export Icon keyboard_4{};
export Icon keyboard_4_outline{};
export Icon keyboard_5{};
export Icon keyboard_5_outline{};
export Icon keyboard_6{};
export Icon keyboard_6_outline{};
export Icon keyboard_7{};
export Icon keyboard_7_outline{};
export Icon keyboard_8{};
export Icon keyboard_8_outline{};
export Icon keyboard_9{};
export Icon keyboard_9_outline{};
export Icon keyboard_a{};
export Icon keyboard_alt{};
export Icon keyboard_alt_outline{};
export Icon keyboard_any{};
export Icon keyboard_any_outline{};
export Icon keyboard_apostrophe{};
export Icon keyboard_apostrophe_outline{};
export Icon keyboard_arrows{};
export Icon keyboard_arrows_all{};
export Icon keyboard_arrows_down{};
export Icon keyboard_arrows_down_outline{};
export Icon keyboard_arrows_horizontal{};
export Icon keyboard_arrows_horizontal_outline{};
export Icon keyboard_arrows_left{};
export Icon keyboard_arrows_left_outline{};
export Icon keyboard_arrows_none{};
export Icon keyboard_arrows_right{};
export Icon keyboard_arrows_right_outline{};
export Icon keyboard_arrows_up{};
export Icon keyboard_arrows_up_outline{};
export Icon keyboard_arrows_vertical{};
export Icon keyboard_arrows_vertical_outline{};
export Icon keyboard_arrow_down{};
export Icon keyboard_arrow_down_outline{};
export Icon keyboard_arrow_left{};
export Icon keyboard_arrow_left_outline{};
export Icon keyboard_arrow_right{};
export Icon keyboard_arrow_right_outline{};
export Icon keyboard_arrow_up{};
export Icon keyboard_arrow_up_outline{};
export Icon keyboard_asterisk{};
export Icon keyboard_asterisk_outline{};
export Icon keyboard_a_outline{};
export Icon keyboard_b{};
export Icon keyboard_backspace{};
export Icon keyboard_backspace_icon{};
export Icon keyboard_backspace_icon_alternative{};
export Icon keyboard_backspace_icon_alternative_outline{};
export Icon keyboard_backspace_icon_outline{};
export Icon keyboard_backspace_outline{};
export Icon keyboard_bracket_close{};
export Icon keyboard_bracket_close_outline{};
export Icon keyboard_bracket_greater{};
export Icon keyboard_bracket_greater_outline{};
export Icon keyboard_bracket_less{};
export Icon keyboard_bracket_less_outline{};
export Icon keyboard_bracket_open{};
export Icon keyboard_bracket_open_outline{};
export Icon keyboard_b_outline{};
export Icon keyboard_c{};
export Icon keyboard_capslock{};
export Icon keyboard_capslock_icon{};
export Icon keyboard_capslock_icon_outline{};
export Icon keyboard_capslock_outline{};
export Icon keyboard_caret{};
export Icon keyboard_caret_outline{};
export Icon keyboard_colon{};
export Icon keyboard_colon_outline{};
export Icon keyboard_comma{};
export Icon keyboard_command{};
export Icon keyboard_command_outline{};
export Icon keyboard_comma_outline{};
export Icon keyboard_ctrl{};
export Icon keyboard_ctrl_outline{};
export Icon keyboard_c_outline{};
export Icon keyboard_d{};
export Icon keyboard_delete{};
export Icon keyboard_delete_outline{};
export Icon keyboard_d_outline{};
export Icon keyboard_e{};
export Icon keyboard_end{};
export Icon keyboard_end_outline{};
export Icon keyboard_enter{};
export Icon keyboard_enter_outline{};
export Icon keyboard_equals{};
export Icon keyboard_equals_outline{};
export Icon keyboard_escape{};
export Icon keyboard_escape_outline{};
export Icon keyboard_exclamation{};
export Icon keyboard_exclamation_outline{};
export Icon keyboard_e_outline{};
export Icon keyboard_f{};
export Icon keyboard_f1{};
export Icon keyboard_f10{};
export Icon keyboard_f10_outline{};
export Icon keyboard_f11{};
export Icon keyboard_f11_outline{};
export Icon keyboard_f12{};
export Icon keyboard_f12_outline{};
export Icon keyboard_f1_outline{};
export Icon keyboard_f2{};
export Icon keyboard_f2_outline{};
export Icon keyboard_f3{};
export Icon keyboard_f3_outline{};
export Icon keyboard_f4{};
export Icon keyboard_f4_outline{};
export Icon keyboard_f5{};
export Icon keyboard_f5_outline{};
export Icon keyboard_f6{};
export Icon keyboard_f6_outline{};
export Icon keyboard_f7{};
export Icon keyboard_f7_outline{};
export Icon keyboard_f8{};
export Icon keyboard_f8_outline{};
export Icon keyboard_f9{};
export Icon keyboard_f9_outline{};
export Icon keyboard_function{};
export Icon keyboard_function_outline{};
export Icon keyboard_f_outline{};
export Icon keyboard_g{};
export Icon keyboard_g_outline{};
export Icon keyboard_h{};
export Icon keyboard_home{};
export Icon keyboard_home_outline{};
export Icon keyboard_h_outline{};
export Icon keyboard_i{};
export Icon keyboard_insert{};
export Icon keyboard_insert_outline{};
export Icon keyboard_i_outline{};
export Icon keyboard_j{};
export Icon keyboard_j_outline{};
export Icon keyboard_k{};
export Icon keyboard_k_outline{};
export Icon keyboard_l{};
export Icon keyboard_l_outline{};
export Icon keyboard_m{};
export Icon keyboard_minus{};
export Icon keyboard_minus_outline{};
export Icon keyboard_m_outline{};
export Icon keyboard_n{};
export Icon keyboard_numlock{};
export Icon keyboard_numlock_outline{};
export Icon keyboard_numpad_enter{};
export Icon keyboard_numpad_enter_outline{};
export Icon keyboard_numpad_plus{};
export Icon keyboard_numpad_plus_outline{};
export Icon keyboard_n_outline{};
export Icon keyboard_o{};
export Icon keyboard_option{};
export Icon keyboard_option_outline{};
export Icon keyboard_o_outline{};
export Icon keyboard_p{};
export Icon keyboard_page_down{};
export Icon keyboard_page_down_outline{};
export Icon keyboard_page_up{};
export Icon keyboard_page_up_outline{};
export Icon keyboard_period{};
export Icon keyboard_period_outline{};
export Icon keyboard_plus{};
export Icon keyboard_plus_outline{};
export Icon keyboard_printscreen{};
export Icon keyboard_printscreen_outline{};
export Icon keyboard_p_outline{};
export Icon keyboard_q{};
export Icon keyboard_question{};
export Icon keyboard_question_outline{};
export Icon keyboard_quote{};
export Icon keyboard_quote_outline{};
export Icon keyboard_q_outline{};
export Icon keyboard_r{};
export Icon keyboard_return{};
export Icon keyboard_return_outline{};
export Icon keyboard_r_outline{};
export Icon keyboard_s{};
export Icon keyboard_semicolon{};
export Icon keyboard_semicolon_outline{};
export Icon keyboard_shift{};
export Icon keyboard_shift_icon{};
export Icon keyboard_shift_icon_outline{};
export Icon keyboard_shift_outline{};
export Icon keyboard_slash_back{};
export Icon keyboard_slash_back_outline{};
export Icon keyboard_slash_forward{};
export Icon keyboard_slash_forward_outline{};
export Icon keyboard_space{};
export Icon keyboard_space_icon{};
export Icon keyboard_space_icon_outline{};
export Icon keyboard_space_outline{};
export Icon keyboard_s_outline{};
export Icon keyboard_t{};
export Icon keyboard_tab{};
export Icon keyboard_tab_icon{};
export Icon keyboard_tab_icon_alternative{};
export Icon keyboard_tab_icon_alternative_outline{};
export Icon keyboard_tab_icon_outline{};
export Icon keyboard_tab_outline{};
export Icon keyboard_tilde{};
export Icon keyboard_tilde_outline{};
export Icon keyboard_t_outline{};
export Icon keyboard_u{};
export Icon keyboard_u_outline{};
export Icon keyboard_v{};
export Icon keyboard_v_outline{};
export Icon keyboard_w{};
export Icon keyboard_win{};
export Icon keyboard_win_outline{};
export Icon keyboard_w_outline{};
export Icon keyboard_x{};
export Icon keyboard_x_outline{};
export Icon keyboard_y{};
export Icon keyboard_y_outline{};
export Icon keyboard_z{};
export Icon keyboard_z_outline{};
export Icon mouse{};
export Icon mouse_horizontal{};
export Icon mouse_left{};
export Icon mouse_left_outline{};
export Icon mouse_move{};
export Icon mouse_outline{};
export Icon mouse_right{};
export Icon mouse_right_outline{};
export Icon mouse_scroll{};
export Icon mouse_scroll_down{};
export Icon mouse_scroll_down_outline{};
export Icon mouse_scroll_outline{};
export Icon mouse_scroll_up{};
export Icon mouse_scroll_up_outline{};
export Icon mouse_scroll_vertical{};
export Icon mouse_scroll_vertical_outline{};
export Icon mouse_small{};
export Icon mouse_vertical{};
export Icon abnormal{};
export Icon activity_source{};
export Icon add_computer{};
export Icon add_four{};
export Icon add_item{};
export Icon add_one{};
export Icon add_subset{};
export Icon add_subtract{};
export Icon add_three{};
export Icon add{};
export Icon adjacent_item{};
export Icon adjustment{};
export Icon afferent_four{};
export Icon afferent_three{};
export Icon afferent_two{};
export Icon afferent{};
export Icon aiming{};
export Icon airplay{};
export Icon align_bottom_two{};
export Icon align_bottom{};
export Icon align_horizontal_center_two{};
export Icon align_horizontally{};
export Icon align_left_one{};
export Icon align_left_two{};
export Icon align_left{};
export Icon align_right_one{};
export Icon align_right_two{};
export Icon align_right{};
export Icon align_text_both_one{};
export Icon align_text_both{};
export Icon align_text_bottom_one{};
export Icon align_text_bottom{};
export Icon align_text_center_one{};
export Icon align_text_center{};
export Icon align_text_left_one{};
export Icon align_text_left{};
export Icon align_text_middle_one{};
export Icon align_text_middle{};
export Icon align_text_right_one{};
export Icon align_text_right{};
export Icon align_text_top_one{};
export Icon align_text_top{};
export Icon align_top_two{};
export Icon align_top{};
export Icon align_vertical_center_two{};
export Icon align_vertically{};
export Icon alignment_bottom_center{};
export Icon alignment_bottom_left{};
export Icon alignment_bottom_right{};
export Icon alignment_horizontal_bottom{};
export Icon alignment_horizontal_center{};
export Icon alignment_horizontal_top{};
export Icon alignment_left_bottom{};
export Icon alignment_left_center{};
export Icon alignment_left_top{};
export Icon alignment_right_bottom{};
export Icon alignment_right_center{};
export Icon alignment_right_top{};
export Icon alignment_top_center{};
export Icon alignment_top_left{};
export Icon alignment_top_right{};
export Icon alignment_vertical_center{};
export Icon alignment_vertical_left{};
export Icon alignment_vertical_right{};
export Icon all_application{};
export Icon alphabetical_sorting_two{};
export Icon alphabetical_sorting{};
export Icon anchor_one{};
export Icon anchor_round{};
export Icon anchor_squre{};
export Icon anchor{};
export Icon api_app{};
export Icon api{};
export Icon applet_closed{};
export Icon application_menu{};
export Icon application_two{};
export Icon arithmetic{};
export Icon arrow_circle_down{};
export Icon arrow_circle_left{};
export Icon arrow_circle_right{};
export Icon arrow_circle_up{};
export Icon arrow_down{};
export Icon arrow_left_down{};
export Icon arrow_left_up{};
export Icon arrow_left{};
export Icon arrow_right_down{};
export Icon arrow_right_up{};
export Icon arrow_right{};
export Icon arrow_up{};
export Icon assembly_line{};
export Icon audio_file{};
export Icon back_one{};
export Icon bezier_curve{};
export Icon bill{};
export Icon block{};
export Icon book_open{};
export Icon bookmark_one{};
export Icon bookmark{};
export Icon branch_one{};
export Icon branch_two{};
export Icon branch{};
export Icon bring_to_front{};
export Icon camera{};
export Icon carousel{};
export Icon caution{};
export Icon change{};
export Icon chart_histogram_one{};
export Icon chart_histogram{};
export Icon check_one{};
export Icon check_small{};
export Icon check{};
export Icon checklist{};
export Icon chip{};
export Icon circle_double_down{};
export Icon circle_double_left{};
export Icon circle_double_right{};
export Icon circle_double_up{};
export Icon circle_five_line{};
export Icon circle_left_down{};
export Icon circle_left_up{};
export Icon circle_right_down{};
export Icon circle_right_up{};
export Icon circle_two_line{};
export Icon circular_connection{};
export Icon click_to_fold{};
export Icon clipboard{};
export Icon close_one{};
export Icon close_small{};
export Icon close{};
export Icon clue{};
export Icon code_brackets{};
export Icon code_computer{};
export Icon code_download{};
export Icon code{};
export Icon collapse_text_input{};
export Icon collection_files{};
export Icon color_card{};
export Icon compass{};
export Icon config{};
export Icon connection_arrow{};
export Icon copy_link{};
export Icon copy{};
export Icon corner_down_left{};
export Icon corner_down_right{};
export Icon corner_left_down{};
export Icon corner_left_up{};
export Icon corner_right_down{};
export Icon corner_right_up{};
export Icon corner_up_left{};
export Icon corner_up_right{};
export Icon correct{};
export Icon cross_ring_two{};
export Icon cube_three{};
export Icon curve_adjustment{};
export Icon cutting{};
export Icon cycle_arrow{};
export Icon cycle_movement{};
export Icon cycle{};
export Icon data_display{};
export Icon data_file{};
export Icon data_lock{};
export Icon data_switching{};
export Icon data_user{};
export Icon data{};
export Icon delete_five{};
export Icon delete_four{};
export Icon delete_two{};
export Icon diamond_one{};
export Icon diamond_three{};
export Icon diamond_two{};
export Icon dividing_line_one{};
export Icon division{};
export Icon done_all{};
export Icon dot{};
export Icon double_down{};
export Icon double_left{};
export Icon double_right{};
export Icon double_up{};
export Icon down_c{};
export Icon down_one{};
export Icon down_picture{};
export Icon down_small{};
export Icon down_square{};
export Icon down{};
export Icon download_one{};
export Icon download_three{};
export Icon download_two{};
export Icon download{};
export Icon drag{};
export Icon drop_down_list{};
export Icon drop_shadow_down{};
export Icon drop_shadow_left{};
export Icon drop_shadow_right{};
export Icon drop_shadow_up{};
export Icon efferent_four{};
export Icon efferent_three{};
export Icon endless{};
export Icon endpoint_displacement{};
export Icon equalizer{};
export Icon error_prompt{};
export Icon error{};
export Icon exclude_selection{};
export Icon expand_down_one{};
export Icon expand_down{};
export Icon expand_left_and_right{};
export Icon expand_left{};
export Icon expand_right{};
export Icon expand_text_input{};
export Icon expand_up{};
export Icon experiment_one{};
export Icon extend{};
export Icon figma_component{};
export Icon figma_flatten_selection{};
export Icon file_addition_one{};
export Icon file_addition{};
export Icon file_cabinet{};
export Icon file_code_one{};
export Icon file_code{};
export Icon file_collection_one{};
export Icon file_collection{};
export Icon file_conversion_one{};
export Icon file_conversion{};
export Icon file_date_one{};
export Icon file_date{};
export Icon file_display_one{};
export Icon file_display{};
export Icon file_doc{};
export Icon file_editing_one{};
export Icon file_editing{};
export Icon file_excel{};
export Icon file_failed_one{};
export Icon file_failed{};
export Icon file_focus_one{};
export Icon file_focus{};
export Icon file_gif{};
export Icon file_hash_one{};
export Icon file_hash{};
export Icon file_hiding_one{};
export Icon file_hiding{};
export Icon file_jpg{};
export Icon file_lock_one{};
export Icon file_lock{};
export Icon file_music_one{};
export Icon file_music{};
export Icon file_pdf_one{};
export Icon file_pdf{};
export Icon file_ppt{};
export Icon file_protection_one{};
export Icon file_protection{};
export Icon file_quality_one{};
export Icon file_quality{};
export Icon file_question{};
export Icon file_removal_one{};
export Icon file_removal{};
export Icon file_search_one{};
export Icon file_search_two{};
export Icon file_search{};
export Icon file_settings_one{};
export Icon file_settings{};
export Icon file_staff_one{};
export Icon file_staff{};
export Icon file_success_one{};
export Icon file_success{};
export Icon file_text_one{};
export Icon file_text{};
export Icon file_tips_one{};
export Icon file_tips{};
export Icon file_txt_one{};
export Icon file_txt{};
export Icon file_withdrawal_one{};
export Icon file_withdrawal{};
export Icon file_word{};
export Icon file_zip{};
export Icon filter{};
export Icon fold_up_one{};
export Icon folder_block_one{};
export Icon folder_block{};
export Icon folder_close{};
export Icon folder_code_one{};
export Icon folder_code{};
export Icon folder_conversion_one{};
export Icon folder_conversion{};
export Icon folder_download{};
export Icon folder_failed_one{};
export Icon folder_failed{};
export Icon folder_focus_one{};
export Icon folder_focus{};
export Icon folder_lock_one{};
export Icon folder_lock{};
export Icon folder_minus{};
export Icon folder_music_one{};
export Icon folder_music{};
export Icon folder_open{};
export Icon folder_plus{};
export Icon folder_protection_one{};
export Icon folder_protection{};
export Icon folder_quality_one{};
export Icon folder_quality{};
export Icon folder_search_one{};
export Icon folder_search{};
export Icon folder_settings_one{};
export Icon folder_settings{};
export Icon folder_success_one{};
export Icon folder_success{};
export Icon folder_upload{};
export Icon folder_withdrawal_one{};
export Icon folder_withdrawal{};
export Icon font_search{};
export Icon font_size{};
export Icon forbid{};
export Icon form_one{};
export Icon formula{};
export Icon freeze_column{};
export Icon freeze_line{};
export Icon full_screen_one{};
export Icon full_screen_play{};
export Icon full_screen_two{};
export Icon full_selection{};
export Icon github_one{};
export Icon go_ahead{};
export Icon go_end{};
export Icon go_start{};
export Icon grid_nine{};
export Icon grid_three{};
export Icon group{};
export Icon hamburger_button{};
export Icon harm{};
export Icon helpcenter{};
export Icon hexagon_one{};
export Icon history{};
export Icon home{};
export Icon hourglass_full{};
export Icon hourglass_null{};
export Icon hourglass{};
export Icon image_files{};
export Icon inbox_download_r{};
export Icon inbox_r{};
export Icon inbox_success_r{};
export Icon inbox_upload_r{};
export Icon info{};
export Icon inner_shadow_bottom_left{};
export Icon inner_shadow_bottom_right{};
export Icon inner_shadow_down{};
export Icon inner_shadow_left{};
export Icon inner_shadow_right{};
export Icon inner_shadow_top_left{};
export Icon inner_shadow_top_right{};
export Icon inner_shadow_up{};
export Icon install{};
export Icon internal_data{};
export Icon internal_transmission{};
export Icon intersect_selection{};
export Icon invalid_files{};
export Icon invert_left{};
export Icon invert_right{};
export Icon label{};
export Icon left_alignment{};
export Icon left_c{};
export Icon left_one{};
export Icon left_small_down{};
export Icon left_small_up{};
export Icon left_small{};
export Icon left_square{};
export Icon left{};
export Icon like{};
export Icon link_one{};
export Icon link_three{};
export Icon link_two{};
export Icon link{};
export Icon list_add{};
export Icon list_alphabet{};
export Icon list_bottom{};
export Icon list_checkbox{};
export Icon list_fail{};
export Icon list_middle{};
export Icon list_numbers{};
export Icon list_one{};
export Icon list_success{};
export Icon list_top{};
export Icon list_two{};
export Icon list_view{};
export Icon list{};
export Icon loading_four{};
export Icon loading{};
export Icon log{};
export Icon login{};
export Icon logout{};
export Icon loop_once{};
export Icon material{};
export Icon memory{};
export Icon menu_fold_one{};
export Icon menu_fold{};
export Icon menu_unfold_one{};
export Icon menu_unfold{};
export Icon minus_selection{};
export Icon minus{};
export Icon monitor_two{};
export Icon more_app{};
export Icon more_four{};
export Icon more_one{};
export Icon more_two{};
export Icon more{};
export Icon move_in{};
export Icon multi_circular{};
export Icon new_afferent{};
export Icon new_efferent{};
export Icon octagon{};
export Icon off_screen_one{};
export Icon off_screen_two{};
export Icon outgoing{};
export Icon oval_one{};
export Icon page_template{};
export Icon page{};
export Icon paragraph_break_two{};
export Icon paragraph_round{};
export Icon paragraph_triangle{};
export Icon parallelogram{};
export Icon pause{};
export Icon pay_code_one{};
export Icon pentagon_one{};
export Icon percentage{};
export Icon pic{};
export Icon platte{};
export Icon play_cycle{};
export Icon play_once{};
export Icon play_one{};
export Icon plus{};
export Icon power{};
export Icon preview_open{};
export Icon process_line{};
export Icon protect{};
export Icon quadrilateral{};
export Icon radiation{};
export Icon rectangle_one{};
export Icon rectangle_small{};
export Icon rectangle{};
export Icon recycling_pool{};
export Icon recycling{};
export Icon redo{};
export Icon refresh_one{};
export Icon refresh{};
export Icon reject{};
export Icon right_angle{};
export Icon right_bar{};
export Icon right_c{};
export Icon right_expand{};
export Icon right_one{};
export Icon right_small_down{};
export Icon right_small_up{};
export Icon right_small{};
export Icon right_square{};
export Icon right_two{};
export Icon right{};
export Icon ripple{};
export Icon rotate{};
export Icon rotation_horizontal{};
export Icon rotation_vertical{};
export Icon rotation{};
export Icon round_caliper{};
export Icon round{};
export Icon rss{};
export Icon ruler{};
export Icon s_turn_left{};
export Icon save_one{};
export Icon save{};
export Icon scan_code{};
export Icon scan_setting{};
export Icon scan{};
export Icon scanning_two{};
export Icon scanning{};
export Icon scatter_alignment{};
export Icon search{};
export Icon selected_focus{};
export Icon send_one{};
export Icon seo_folder{};
export Icon setting_one{};
export Icon setting_two{};
export Icon share_one{};
export Icon share_three{};
export Icon share{};
export Icon shield_add{};
export Icon shield{};
export Icon shuffle_one{};
export Icon shuffle{};
export Icon signal_one{};
export Icon signal{};
export Icon six_circular_connection{};
export Icon six_points{};
export Icon sliding_horizontal{};
export Icon sliding_vertical{};
export Icon smart_optimization{};
export Icon sort_four{};
export Icon sort_one{};
export Icon sort_three{};
export Icon sort_two{};
export Icon sort{};
export Icon sphere{};
export Icon split{};
export Icon square_small{};
export Icon square{};
export Icon subtract_selection_one{};
export Icon subtract_selection{};
export Icon success_picture{};
export Icon sum{};
export Icon switch_arrow{};
export Icon switch_button{};
export Icon symbol{};
export Icon sync{};
export Icon system{};
export Icon table_file{};
export Icon tag_one{};
export Icon tag{};
export Icon target{};
export Icon terminal{};
export Icon termination_file{};
export Icon text_recognition{};
export Icon texture{};
export Icon thermometer{};
export Icon three_hexagons{};
export Icon time{};
export Icon to_bottom_one{};
export Icon to_bottom{};
export Icon to_left{};
export Icon to_right{};
export Icon to_top_one{};
export Icon to_top{};
export Icon tool{};
export Icon transaction{};
export Icon transfer_data{};
export Icon transform{};
export Icon translate{};
export Icon trapezoid{};
export Icon tree_diagram{};
export Icon tree_list{};
export Icon trending_down{};
export Icon trending_up{};
export Icon triangle{};
export Icon two_dimensional_code_one{};
export Icon two_dimensional_code_two{};
export Icon undo{};
export Icon union_selection{};
export Icon unlink{};
export Icon up_one{};
export Icon up_small{};
export Icon up_square{};
export Icon up{};
export Icon upload_picture{};
export Icon upload_web{};
export Icon upload{};
export Icon video_file{};
export Icon waterfalls_h{};
export Icon waterfalls_v{};
export Icon waves_left{};
export Icon waves_right{};
export Icon web_page{};
export Icon wifi{};
export Icon workbench{};
export Icon zoom_in{};
export Icon zoom_internal{};
export Icon zoom_out{};
	export ext::StringHashMap<std::reference_wrapper<Icon>> iconMap{};

	void loadIcons(Graphic::TextureAtlas& atlas){
	using namespace std::string_view_literals;
	keyboard_0.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_0");
	iconMap.insert_or_assign("keyboard_0"sv, keyboard_0);

	sort_amount_down.wrapper = *atlas.find(atlas.getUIPage(), "sort-amount-down");
	iconMap.insert_or_assign("sort-amount-down"sv, sort_amount_down);

	keyboard_0_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_0_outline");
	iconMap.insert_or_assign("keyboard_0_outline"sv, keyboard_0_outline);
	keyboard_1.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_1");
	iconMap.insert_or_assign("keyboard_1"sv, keyboard_1);
	keyboard_1_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_1_outline");
	iconMap.insert_or_assign("keyboard_1_outline"sv, keyboard_1_outline);
	keyboard_2.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_2");
	iconMap.insert_or_assign("keyboard_2"sv, keyboard_2);
	keyboard_2_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_2_outline");
	iconMap.insert_or_assign("keyboard_2_outline"sv, keyboard_2_outline);
	keyboard_3.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_3");
	iconMap.insert_or_assign("keyboard_3"sv, keyboard_3);
	keyboard_3_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_3_outline");
	iconMap.insert_or_assign("keyboard_3_outline"sv, keyboard_3_outline);
	keyboard_4.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_4");
	iconMap.insert_or_assign("keyboard_4"sv, keyboard_4);
	keyboard_4_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_4_outline");
	iconMap.insert_or_assign("keyboard_4_outline"sv, keyboard_4_outline);
	keyboard_5.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_5");
	iconMap.insert_or_assign("keyboard_5"sv, keyboard_5);
	keyboard_5_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_5_outline");
	iconMap.insert_or_assign("keyboard_5_outline"sv, keyboard_5_outline);
	keyboard_6.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_6");
	iconMap.insert_or_assign("keyboard_6"sv, keyboard_6);
	keyboard_6_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_6_outline");
	iconMap.insert_or_assign("keyboard_6_outline"sv, keyboard_6_outline);
	keyboard_7.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_7");
	iconMap.insert_or_assign("keyboard_7"sv, keyboard_7);
	keyboard_7_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_7_outline");
	iconMap.insert_or_assign("keyboard_7_outline"sv, keyboard_7_outline);
	keyboard_8.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_8");
	iconMap.insert_or_assign("keyboard_8"sv, keyboard_8);
	keyboard_8_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_8_outline");
	iconMap.insert_or_assign("keyboard_8_outline"sv, keyboard_8_outline);
	keyboard_9.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_9");
	iconMap.insert_or_assign("keyboard_9"sv, keyboard_9);
	keyboard_9_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_9_outline");
	iconMap.insert_or_assign("keyboard_9_outline"sv, keyboard_9_outline);
	keyboard_a.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_a");
	iconMap.insert_or_assign("keyboard_a"sv, keyboard_a);
	keyboard_alt.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_alt");
	iconMap.insert_or_assign("keyboard_alt"sv, keyboard_alt);
	keyboard_alt_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_alt_outline");
	iconMap.insert_or_assign("keyboard_alt_outline"sv, keyboard_alt_outline);
	keyboard_any.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_any");
	iconMap.insert_or_assign("keyboard_any"sv, keyboard_any);
	keyboard_any_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_any_outline");
	iconMap.insert_or_assign("keyboard_any_outline"sv, keyboard_any_outline);
	keyboard_apostrophe.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_apostrophe");
	iconMap.insert_or_assign("keyboard_apostrophe"sv, keyboard_apostrophe);
	keyboard_apostrophe_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_apostrophe_outline");
	iconMap.insert_or_assign("keyboard_apostrophe_outline"sv, keyboard_apostrophe_outline);
	keyboard_arrows.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_arrows");
	iconMap.insert_or_assign("keyboard_arrows"sv, keyboard_arrows);
	keyboard_arrows_all.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_arrows_all");
	iconMap.insert_or_assign("keyboard_arrows_all"sv, keyboard_arrows_all);
	keyboard_arrows_down.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_arrows_down");
	iconMap.insert_or_assign("keyboard_arrows_down"sv, keyboard_arrows_down);
	keyboard_arrows_down_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_arrows_down_outline");
	iconMap.insert_or_assign("keyboard_arrows_down_outline"sv, keyboard_arrows_down_outline);
	keyboard_arrows_horizontal.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_arrows_horizontal");
	iconMap.insert_or_assign("keyboard_arrows_horizontal"sv, keyboard_arrows_horizontal);
	keyboard_arrows_horizontal_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_arrows_horizontal_outline");
	iconMap.insert_or_assign("keyboard_arrows_horizontal_outline"sv, keyboard_arrows_horizontal_outline);
	keyboard_arrows_left.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_arrows_left");
	iconMap.insert_or_assign("keyboard_arrows_left"sv, keyboard_arrows_left);
	keyboard_arrows_left_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_arrows_left_outline");
	iconMap.insert_or_assign("keyboard_arrows_left_outline"sv, keyboard_arrows_left_outline);
	keyboard_arrows_none.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_arrows_none");
	iconMap.insert_or_assign("keyboard_arrows_none"sv, keyboard_arrows_none);
	keyboard_arrows_right.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_arrows_right");
	iconMap.insert_or_assign("keyboard_arrows_right"sv, keyboard_arrows_right);
	keyboard_arrows_right_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_arrows_right_outline");
	iconMap.insert_or_assign("keyboard_arrows_right_outline"sv, keyboard_arrows_right_outline);
	keyboard_arrows_up.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_arrows_up");
	iconMap.insert_or_assign("keyboard_arrows_up"sv, keyboard_arrows_up);
	keyboard_arrows_up_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_arrows_up_outline");
	iconMap.insert_or_assign("keyboard_arrows_up_outline"sv, keyboard_arrows_up_outline);
	keyboard_arrows_vertical.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_arrows_vertical");
	iconMap.insert_or_assign("keyboard_arrows_vertical"sv, keyboard_arrows_vertical);
	keyboard_arrows_vertical_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_arrows_vertical_outline");
	iconMap.insert_or_assign("keyboard_arrows_vertical_outline"sv, keyboard_arrows_vertical_outline);
	keyboard_arrow_down.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_arrow_down");
	iconMap.insert_or_assign("keyboard_arrow_down"sv, keyboard_arrow_down);
	keyboard_arrow_down_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_arrow_down_outline");
	iconMap.insert_or_assign("keyboard_arrow_down_outline"sv, keyboard_arrow_down_outline);
	keyboard_arrow_left.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_arrow_left");
	iconMap.insert_or_assign("keyboard_arrow_left"sv, keyboard_arrow_left);
	keyboard_arrow_left_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_arrow_left_outline");
	iconMap.insert_or_assign("keyboard_arrow_left_outline"sv, keyboard_arrow_left_outline);
	keyboard_arrow_right.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_arrow_right");
	iconMap.insert_or_assign("keyboard_arrow_right"sv, keyboard_arrow_right);
	keyboard_arrow_right_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_arrow_right_outline");
	iconMap.insert_or_assign("keyboard_arrow_right_outline"sv, keyboard_arrow_right_outline);
	keyboard_arrow_up.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_arrow_up");
	iconMap.insert_or_assign("keyboard_arrow_up"sv, keyboard_arrow_up);
	keyboard_arrow_up_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_arrow_up_outline");
	iconMap.insert_or_assign("keyboard_arrow_up_outline"sv, keyboard_arrow_up_outline);
	keyboard_asterisk.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_asterisk");
	iconMap.insert_or_assign("keyboard_asterisk"sv, keyboard_asterisk);
	keyboard_asterisk_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_asterisk_outline");
	iconMap.insert_or_assign("keyboard_asterisk_outline"sv, keyboard_asterisk_outline);
	keyboard_a_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_a_outline");
	iconMap.insert_or_assign("keyboard_a_outline"sv, keyboard_a_outline);
	keyboard_b.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_b");
	iconMap.insert_or_assign("keyboard_b"sv, keyboard_b);
	keyboard_backspace.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_backspace");
	iconMap.insert_or_assign("keyboard_backspace"sv, keyboard_backspace);
	keyboard_backspace_icon.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_backspace_icon");
	iconMap.insert_or_assign("keyboard_backspace_icon"sv, keyboard_backspace_icon);
	keyboard_backspace_icon_alternative.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_backspace_icon_alternative");
	iconMap.insert_or_assign("keyboard_backspace_icon_alternative"sv, keyboard_backspace_icon_alternative);
	keyboard_backspace_icon_alternative_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_backspace_icon_alternative_outline");
	iconMap.insert_or_assign("keyboard_backspace_icon_alternative_outline"sv, keyboard_backspace_icon_alternative_outline);
	keyboard_backspace_icon_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_backspace_icon_outline");
	iconMap.insert_or_assign("keyboard_backspace_icon_outline"sv, keyboard_backspace_icon_outline);
	keyboard_backspace_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_backspace_outline");
	iconMap.insert_or_assign("keyboard_backspace_outline"sv, keyboard_backspace_outline);
	keyboard_bracket_close.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_bracket_close");
	iconMap.insert_or_assign("keyboard_bracket_close"sv, keyboard_bracket_close);
	keyboard_bracket_close_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_bracket_close_outline");
	iconMap.insert_or_assign("keyboard_bracket_close_outline"sv, keyboard_bracket_close_outline);
	keyboard_bracket_greater.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_bracket_greater");
	iconMap.insert_or_assign("keyboard_bracket_greater"sv, keyboard_bracket_greater);
	keyboard_bracket_greater_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_bracket_greater_outline");
	iconMap.insert_or_assign("keyboard_bracket_greater_outline"sv, keyboard_bracket_greater_outline);
	keyboard_bracket_less.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_bracket_less");
	iconMap.insert_or_assign("keyboard_bracket_less"sv, keyboard_bracket_less);
	keyboard_bracket_less_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_bracket_less_outline");
	iconMap.insert_or_assign("keyboard_bracket_less_outline"sv, keyboard_bracket_less_outline);
	keyboard_bracket_open.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_bracket_open");
	iconMap.insert_or_assign("keyboard_bracket_open"sv, keyboard_bracket_open);
	keyboard_bracket_open_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_bracket_open_outline");
	iconMap.insert_or_assign("keyboard_bracket_open_outline"sv, keyboard_bracket_open_outline);
	keyboard_b_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_b_outline");
	iconMap.insert_or_assign("keyboard_b_outline"sv, keyboard_b_outline);
	keyboard_c.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_c");
	iconMap.insert_or_assign("keyboard_c"sv, keyboard_c);
	keyboard_capslock.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_capslock");
	iconMap.insert_or_assign("keyboard_capslock"sv, keyboard_capslock);
	keyboard_capslock_icon.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_capslock_icon");
	iconMap.insert_or_assign("keyboard_capslock_icon"sv, keyboard_capslock_icon);
	keyboard_capslock_icon_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_capslock_icon_outline");
	iconMap.insert_or_assign("keyboard_capslock_icon_outline"sv, keyboard_capslock_icon_outline);
	keyboard_capslock_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_capslock_outline");
	iconMap.insert_or_assign("keyboard_capslock_outline"sv, keyboard_capslock_outline);
	keyboard_caret.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_caret");
	iconMap.insert_or_assign("keyboard_caret"sv, keyboard_caret);
	keyboard_caret_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_caret_outline");
	iconMap.insert_or_assign("keyboard_caret_outline"sv, keyboard_caret_outline);
	keyboard_colon.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_colon");
	iconMap.insert_or_assign("keyboard_colon"sv, keyboard_colon);
	keyboard_colon_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_colon_outline");
	iconMap.insert_or_assign("keyboard_colon_outline"sv, keyboard_colon_outline);
	keyboard_comma.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_comma");
	iconMap.insert_or_assign("keyboard_comma"sv, keyboard_comma);
	keyboard_command.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_command");
	iconMap.insert_or_assign("keyboard_command"sv, keyboard_command);
	keyboard_command_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_command_outline");
	iconMap.insert_or_assign("keyboard_command_outline"sv, keyboard_command_outline);
	keyboard_comma_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_comma_outline");
	iconMap.insert_or_assign("keyboard_comma_outline"sv, keyboard_comma_outline);
	keyboard_ctrl.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_ctrl");
	iconMap.insert_or_assign("keyboard_ctrl"sv, keyboard_ctrl);
	keyboard_ctrl_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_ctrl_outline");
	iconMap.insert_or_assign("keyboard_ctrl_outline"sv, keyboard_ctrl_outline);
	keyboard_c_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_c_outline");
	iconMap.insert_or_assign("keyboard_c_outline"sv, keyboard_c_outline);
	keyboard_d.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_d");
	iconMap.insert_or_assign("keyboard_d"sv, keyboard_d);
	keyboard_delete.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_delete");
	iconMap.insert_or_assign("keyboard_delete"sv, keyboard_delete);
	keyboard_delete_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_delete_outline");
	iconMap.insert_or_assign("keyboard_delete_outline"sv, keyboard_delete_outline);
	keyboard_d_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_d_outline");
	iconMap.insert_or_assign("keyboard_d_outline"sv, keyboard_d_outline);
	keyboard_e.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_e");
	iconMap.insert_or_assign("keyboard_e"sv, keyboard_e);
	keyboard_end.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_end");
	iconMap.insert_or_assign("keyboard_end"sv, keyboard_end);
	keyboard_end_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_end_outline");
	iconMap.insert_or_assign("keyboard_end_outline"sv, keyboard_end_outline);
	keyboard_enter.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_enter");
	iconMap.insert_or_assign("keyboard_enter"sv, keyboard_enter);
	keyboard_enter_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_enter_outline");
	iconMap.insert_or_assign("keyboard_enter_outline"sv, keyboard_enter_outline);
	keyboard_equals.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_equals");
	iconMap.insert_or_assign("keyboard_equals"sv, keyboard_equals);
	keyboard_equals_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_equals_outline");
	iconMap.insert_or_assign("keyboard_equals_outline"sv, keyboard_equals_outline);
	keyboard_escape.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_escape");
	iconMap.insert_or_assign("keyboard_escape"sv, keyboard_escape);
	keyboard_escape_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_escape_outline");
	iconMap.insert_or_assign("keyboard_escape_outline"sv, keyboard_escape_outline);
	keyboard_exclamation.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_exclamation");
	iconMap.insert_or_assign("keyboard_exclamation"sv, keyboard_exclamation);
	keyboard_exclamation_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_exclamation_outline");
	iconMap.insert_or_assign("keyboard_exclamation_outline"sv, keyboard_exclamation_outline);
	keyboard_e_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_e_outline");
	iconMap.insert_or_assign("keyboard_e_outline"sv, keyboard_e_outline);
	keyboard_f.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_f");
	iconMap.insert_or_assign("keyboard_f"sv, keyboard_f);
	keyboard_f1.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_f1");
	iconMap.insert_or_assign("keyboard_f1"sv, keyboard_f1);
	keyboard_f10.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_f10");
	iconMap.insert_or_assign("keyboard_f10"sv, keyboard_f10);
	keyboard_f10_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_f10_outline");
	iconMap.insert_or_assign("keyboard_f10_outline"sv, keyboard_f10_outline);
	keyboard_f11.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_f11");
	iconMap.insert_or_assign("keyboard_f11"sv, keyboard_f11);
	keyboard_f11_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_f11_outline");
	iconMap.insert_or_assign("keyboard_f11_outline"sv, keyboard_f11_outline);
	keyboard_f12.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_f12");
	iconMap.insert_or_assign("keyboard_f12"sv, keyboard_f12);
	keyboard_f12_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_f12_outline");
	iconMap.insert_or_assign("keyboard_f12_outline"sv, keyboard_f12_outline);
	keyboard_f1_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_f1_outline");
	iconMap.insert_or_assign("keyboard_f1_outline"sv, keyboard_f1_outline);
	keyboard_f2.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_f2");
	iconMap.insert_or_assign("keyboard_f2"sv, keyboard_f2);
	keyboard_f2_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_f2_outline");
	iconMap.insert_or_assign("keyboard_f2_outline"sv, keyboard_f2_outline);
	keyboard_f3.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_f3");
	iconMap.insert_or_assign("keyboard_f3"sv, keyboard_f3);
	keyboard_f3_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_f3_outline");
	iconMap.insert_or_assign("keyboard_f3_outline"sv, keyboard_f3_outline);
	keyboard_f4.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_f4");
	iconMap.insert_or_assign("keyboard_f4"sv, keyboard_f4);
	keyboard_f4_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_f4_outline");
	iconMap.insert_or_assign("keyboard_f4_outline"sv, keyboard_f4_outline);
	keyboard_f5.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_f5");
	iconMap.insert_or_assign("keyboard_f5"sv, keyboard_f5);
	keyboard_f5_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_f5_outline");
	iconMap.insert_or_assign("keyboard_f5_outline"sv, keyboard_f5_outline);
	keyboard_f6.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_f6");
	iconMap.insert_or_assign("keyboard_f6"sv, keyboard_f6);
	keyboard_f6_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_f6_outline");
	iconMap.insert_or_assign("keyboard_f6_outline"sv, keyboard_f6_outline);
	keyboard_f7.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_f7");
	iconMap.insert_or_assign("keyboard_f7"sv, keyboard_f7);
	keyboard_f7_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_f7_outline");
	iconMap.insert_or_assign("keyboard_f7_outline"sv, keyboard_f7_outline);
	keyboard_f8.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_f8");
	iconMap.insert_or_assign("keyboard_f8"sv, keyboard_f8);
	keyboard_f8_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_f8_outline");
	iconMap.insert_or_assign("keyboard_f8_outline"sv, keyboard_f8_outline);
	keyboard_f9.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_f9");
	iconMap.insert_or_assign("keyboard_f9"sv, keyboard_f9);
	keyboard_f9_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_f9_outline");
	iconMap.insert_or_assign("keyboard_f9_outline"sv, keyboard_f9_outline);
	keyboard_function.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_function");
	iconMap.insert_or_assign("keyboard_function"sv, keyboard_function);
	keyboard_function_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_function_outline");
	iconMap.insert_or_assign("keyboard_function_outline"sv, keyboard_function_outline);
	keyboard_f_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_f_outline");
	iconMap.insert_or_assign("keyboard_f_outline"sv, keyboard_f_outline);
	keyboard_g.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_g");
	iconMap.insert_or_assign("keyboard_g"sv, keyboard_g);
	keyboard_g_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_g_outline");
	iconMap.insert_or_assign("keyboard_g_outline"sv, keyboard_g_outline);
	keyboard_h.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_h");
	iconMap.insert_or_assign("keyboard_h"sv, keyboard_h);
	keyboard_home.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_home");
	iconMap.insert_or_assign("keyboard_home"sv, keyboard_home);
	keyboard_home_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_home_outline");
	iconMap.insert_or_assign("keyboard_home_outline"sv, keyboard_home_outline);
	keyboard_h_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_h_outline");
	iconMap.insert_or_assign("keyboard_h_outline"sv, keyboard_h_outline);
	keyboard_i.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_i");
	iconMap.insert_or_assign("keyboard_i"sv, keyboard_i);
	keyboard_insert.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_insert");
	iconMap.insert_or_assign("keyboard_insert"sv, keyboard_insert);
	keyboard_insert_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_insert_outline");
	iconMap.insert_or_assign("keyboard_insert_outline"sv, keyboard_insert_outline);
	keyboard_i_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_i_outline");
	iconMap.insert_or_assign("keyboard_i_outline"sv, keyboard_i_outline);
	keyboard_j.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_j");
	iconMap.insert_or_assign("keyboard_j"sv, keyboard_j);
	keyboard_j_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_j_outline");
	iconMap.insert_or_assign("keyboard_j_outline"sv, keyboard_j_outline);
	keyboard_k.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_k");
	iconMap.insert_or_assign("keyboard_k"sv, keyboard_k);
	keyboard_k_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_k_outline");
	iconMap.insert_or_assign("keyboard_k_outline"sv, keyboard_k_outline);
	keyboard_l.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_l");
	iconMap.insert_or_assign("keyboard_l"sv, keyboard_l);
	keyboard_l_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_l_outline");
	iconMap.insert_or_assign("keyboard_l_outline"sv, keyboard_l_outline);
	keyboard_m.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_m");
	iconMap.insert_or_assign("keyboard_m"sv, keyboard_m);
	keyboard_minus.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_minus");
	iconMap.insert_or_assign("keyboard_minus"sv, keyboard_minus);
	keyboard_minus_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_minus_outline");
	iconMap.insert_or_assign("keyboard_minus_outline"sv, keyboard_minus_outline);
	keyboard_m_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_m_outline");
	iconMap.insert_or_assign("keyboard_m_outline"sv, keyboard_m_outline);
	keyboard_n.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_n");
	iconMap.insert_or_assign("keyboard_n"sv, keyboard_n);
	keyboard_numlock.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_numlock");
	iconMap.insert_or_assign("keyboard_numlock"sv, keyboard_numlock);
	keyboard_numlock_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_numlock_outline");
	iconMap.insert_or_assign("keyboard_numlock_outline"sv, keyboard_numlock_outline);
	keyboard_numpad_enter.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_numpad_enter");
	iconMap.insert_or_assign("keyboard_numpad_enter"sv, keyboard_numpad_enter);
	keyboard_numpad_enter_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_numpad_enter_outline");
	iconMap.insert_or_assign("keyboard_numpad_enter_outline"sv, keyboard_numpad_enter_outline);
	keyboard_numpad_plus.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_numpad_plus");
	iconMap.insert_or_assign("keyboard_numpad_plus"sv, keyboard_numpad_plus);
	keyboard_numpad_plus_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_numpad_plus_outline");
	iconMap.insert_or_assign("keyboard_numpad_plus_outline"sv, keyboard_numpad_plus_outline);
	keyboard_n_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_n_outline");
	iconMap.insert_or_assign("keyboard_n_outline"sv, keyboard_n_outline);
	keyboard_o.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_o");
	iconMap.insert_or_assign("keyboard_o"sv, keyboard_o);
	keyboard_option.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_option");
	iconMap.insert_or_assign("keyboard_option"sv, keyboard_option);
	keyboard_option_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_option_outline");
	iconMap.insert_or_assign("keyboard_option_outline"sv, keyboard_option_outline);
	keyboard_o_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_o_outline");
	iconMap.insert_or_assign("keyboard_o_outline"sv, keyboard_o_outline);
	keyboard_p.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_p");
	iconMap.insert_or_assign("keyboard_p"sv, keyboard_p);
	keyboard_page_down.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_page_down");
	iconMap.insert_or_assign("keyboard_page_down"sv, keyboard_page_down);
	keyboard_page_down_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_page_down_outline");
	iconMap.insert_or_assign("keyboard_page_down_outline"sv, keyboard_page_down_outline);
	keyboard_page_up.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_page_up");
	iconMap.insert_or_assign("keyboard_page_up"sv, keyboard_page_up);
	keyboard_page_up_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_page_up_outline");
	iconMap.insert_or_assign("keyboard_page_up_outline"sv, keyboard_page_up_outline);
	keyboard_period.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_period");
	iconMap.insert_or_assign("keyboard_period"sv, keyboard_period);
	keyboard_period_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_period_outline");
	iconMap.insert_or_assign("keyboard_period_outline"sv, keyboard_period_outline);
	keyboard_plus.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_plus");
	iconMap.insert_or_assign("keyboard_plus"sv, keyboard_plus);
	keyboard_plus_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_plus_outline");
	iconMap.insert_or_assign("keyboard_plus_outline"sv, keyboard_plus_outline);
	keyboard_printscreen.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_printscreen");
	iconMap.insert_or_assign("keyboard_printscreen"sv, keyboard_printscreen);
	keyboard_printscreen_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_printscreen_outline");
	iconMap.insert_or_assign("keyboard_printscreen_outline"sv, keyboard_printscreen_outline);
	keyboard_p_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_p_outline");
	iconMap.insert_or_assign("keyboard_p_outline"sv, keyboard_p_outline);
	keyboard_q.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_q");
	iconMap.insert_or_assign("keyboard_q"sv, keyboard_q);
	keyboard_question.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_question");
	iconMap.insert_or_assign("keyboard_question"sv, keyboard_question);
	keyboard_question_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_question_outline");
	iconMap.insert_or_assign("keyboard_question_outline"sv, keyboard_question_outline);
	keyboard_quote.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_quote");
	iconMap.insert_or_assign("keyboard_quote"sv, keyboard_quote);
	keyboard_quote_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_quote_outline");
	iconMap.insert_or_assign("keyboard_quote_outline"sv, keyboard_quote_outline);
	keyboard_q_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_q_outline");
	iconMap.insert_or_assign("keyboard_q_outline"sv, keyboard_q_outline);
	keyboard_r.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_r");
	iconMap.insert_or_assign("keyboard_r"sv, keyboard_r);
	keyboard_return.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_return");
	iconMap.insert_or_assign("keyboard_return"sv, keyboard_return);
	keyboard_return_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_return_outline");
	iconMap.insert_or_assign("keyboard_return_outline"sv, keyboard_return_outline);
	keyboard_r_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_r_outline");
	iconMap.insert_or_assign("keyboard_r_outline"sv, keyboard_r_outline);
	keyboard_s.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_s");
	iconMap.insert_or_assign("keyboard_s"sv, keyboard_s);
	keyboard_semicolon.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_semicolon");
	iconMap.insert_or_assign("keyboard_semicolon"sv, keyboard_semicolon);
	keyboard_semicolon_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_semicolon_outline");
	iconMap.insert_or_assign("keyboard_semicolon_outline"sv, keyboard_semicolon_outline);
	keyboard_shift.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_shift");
	iconMap.insert_or_assign("keyboard_shift"sv, keyboard_shift);
	keyboard_shift_icon.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_shift_icon");
	iconMap.insert_or_assign("keyboard_shift_icon"sv, keyboard_shift_icon);
	keyboard_shift_icon_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_shift_icon_outline");
	iconMap.insert_or_assign("keyboard_shift_icon_outline"sv, keyboard_shift_icon_outline);
	keyboard_shift_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_shift_outline");
	iconMap.insert_or_assign("keyboard_shift_outline"sv, keyboard_shift_outline);
	keyboard_slash_back.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_slash_back");
	iconMap.insert_or_assign("keyboard_slash_back"sv, keyboard_slash_back);
	keyboard_slash_back_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_slash_back_outline");
	iconMap.insert_or_assign("keyboard_slash_back_outline"sv, keyboard_slash_back_outline);
	keyboard_slash_forward.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_slash_forward");
	iconMap.insert_or_assign("keyboard_slash_forward"sv, keyboard_slash_forward);
	keyboard_slash_forward_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_slash_forward_outline");
	iconMap.insert_or_assign("keyboard_slash_forward_outline"sv, keyboard_slash_forward_outline);
	keyboard_space.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_space");
	iconMap.insert_or_assign("keyboard_space"sv, keyboard_space);
	keyboard_space_icon.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_space_icon");
	iconMap.insert_or_assign("keyboard_space_icon"sv, keyboard_space_icon);
	keyboard_space_icon_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_space_icon_outline");
	iconMap.insert_or_assign("keyboard_space_icon_outline"sv, keyboard_space_icon_outline);
	keyboard_space_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_space_outline");
	iconMap.insert_or_assign("keyboard_space_outline"sv, keyboard_space_outline);
	keyboard_s_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_s_outline");
	iconMap.insert_or_assign("keyboard_s_outline"sv, keyboard_s_outline);
	keyboard_t.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_t");
	iconMap.insert_or_assign("keyboard_t"sv, keyboard_t);
	keyboard_tab.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_tab");
	iconMap.insert_or_assign("keyboard_tab"sv, keyboard_tab);
	keyboard_tab_icon.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_tab_icon");
	iconMap.insert_or_assign("keyboard_tab_icon"sv, keyboard_tab_icon);
	keyboard_tab_icon_alternative.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_tab_icon_alternative");
	iconMap.insert_or_assign("keyboard_tab_icon_alternative"sv, keyboard_tab_icon_alternative);
	keyboard_tab_icon_alternative_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_tab_icon_alternative_outline");
	iconMap.insert_or_assign("keyboard_tab_icon_alternative_outline"sv, keyboard_tab_icon_alternative_outline);
	keyboard_tab_icon_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_tab_icon_outline");
	iconMap.insert_or_assign("keyboard_tab_icon_outline"sv, keyboard_tab_icon_outline);
	keyboard_tab_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_tab_outline");
	iconMap.insert_or_assign("keyboard_tab_outline"sv, keyboard_tab_outline);
	keyboard_tilde.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_tilde");
	iconMap.insert_or_assign("keyboard_tilde"sv, keyboard_tilde);
	keyboard_tilde_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_tilde_outline");
	iconMap.insert_or_assign("keyboard_tilde_outline"sv, keyboard_tilde_outline);
	keyboard_t_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_t_outline");
	iconMap.insert_or_assign("keyboard_t_outline"sv, keyboard_t_outline);
	keyboard_u.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_u");
	iconMap.insert_or_assign("keyboard_u"sv, keyboard_u);
	keyboard_u_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_u_outline");
	iconMap.insert_or_assign("keyboard_u_outline"sv, keyboard_u_outline);
	keyboard_v.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_v");
	iconMap.insert_or_assign("keyboard_v"sv, keyboard_v);
	keyboard_v_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_v_outline");
	iconMap.insert_or_assign("keyboard_v_outline"sv, keyboard_v_outline);
	keyboard_w.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_w");
	iconMap.insert_or_assign("keyboard_w"sv, keyboard_w);
	keyboard_win.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_win");
	iconMap.insert_or_assign("keyboard_win"sv, keyboard_win);
	keyboard_win_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_win_outline");
	iconMap.insert_or_assign("keyboard_win_outline"sv, keyboard_win_outline);
	keyboard_w_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_w_outline");
	iconMap.insert_or_assign("keyboard_w_outline"sv, keyboard_w_outline);
	keyboard_x.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_x");
	iconMap.insert_or_assign("keyboard_x"sv, keyboard_x);
	keyboard_x_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_x_outline");
	iconMap.insert_or_assign("keyboard_x_outline"sv, keyboard_x_outline);
	keyboard_y.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_y");
	iconMap.insert_or_assign("keyboard_y"sv, keyboard_y);
	keyboard_y_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_y_outline");
	iconMap.insert_or_assign("keyboard_y_outline"sv, keyboard_y_outline);
	keyboard_z.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_z");
	iconMap.insert_or_assign("keyboard_z"sv, keyboard_z);
	keyboard_z_outline.wrapper = *atlas.find(atlas.getUIPage(), "keyboard_z_outline");
	iconMap.insert_or_assign("keyboard_z_outline"sv, keyboard_z_outline);
	mouse.wrapper = *atlas.find(atlas.getUIPage(), "mouse");
	iconMap.insert_or_assign("mouse"sv, mouse);
	mouse_horizontal.wrapper = *atlas.find(atlas.getUIPage(), "mouse_horizontal");
	iconMap.insert_or_assign("mouse_horizontal"sv, mouse_horizontal);
	mouse_left.wrapper = *atlas.find(atlas.getUIPage(), "mouse_left");
	iconMap.insert_or_assign("mouse_left"sv, mouse_left);
	mouse_left_outline.wrapper = *atlas.find(atlas.getUIPage(), "mouse_left_outline");
	iconMap.insert_or_assign("mouse_left_outline"sv, mouse_left_outline);
	mouse_move.wrapper = *atlas.find(atlas.getUIPage(), "mouse_move");
	iconMap.insert_or_assign("mouse_move"sv, mouse_move);
	mouse_outline.wrapper = *atlas.find(atlas.getUIPage(), "mouse_outline");
	iconMap.insert_or_assign("mouse_outline"sv, mouse_outline);
	mouse_right.wrapper = *atlas.find(atlas.getUIPage(), "mouse_right");
	iconMap.insert_or_assign("mouse_right"sv, mouse_right);
	mouse_right_outline.wrapper = *atlas.find(atlas.getUIPage(), "mouse_right_outline");
	iconMap.insert_or_assign("mouse_right_outline"sv, mouse_right_outline);
	mouse_scroll.wrapper = *atlas.find(atlas.getUIPage(), "mouse_scroll");
	iconMap.insert_or_assign("mouse_scroll"sv, mouse_scroll);
	mouse_scroll_down.wrapper = *atlas.find(atlas.getUIPage(), "mouse_scroll_down");
	iconMap.insert_or_assign("mouse_scroll_down"sv, mouse_scroll_down);
	mouse_scroll_down_outline.wrapper = *atlas.find(atlas.getUIPage(), "mouse_scroll_down_outline");
	iconMap.insert_or_assign("mouse_scroll_down_outline"sv, mouse_scroll_down_outline);
	mouse_scroll_outline.wrapper = *atlas.find(atlas.getUIPage(), "mouse_scroll_outline");
	iconMap.insert_or_assign("mouse_scroll_outline"sv, mouse_scroll_outline);
	mouse_scroll_up.wrapper = *atlas.find(atlas.getUIPage(), "mouse_scroll_up");
	iconMap.insert_or_assign("mouse_scroll_up"sv, mouse_scroll_up);
	mouse_scroll_up_outline.wrapper = *atlas.find(atlas.getUIPage(), "mouse_scroll_up_outline");
	iconMap.insert_or_assign("mouse_scroll_up_outline"sv, mouse_scroll_up_outline);
	mouse_scroll_vertical.wrapper = *atlas.find(atlas.getUIPage(), "mouse_scroll_vertical");
	iconMap.insert_or_assign("mouse_scroll_vertical"sv, mouse_scroll_vertical);
	mouse_scroll_vertical_outline.wrapper = *atlas.find(atlas.getUIPage(), "mouse_scroll_vertical_outline");
	iconMap.insert_or_assign("mouse_scroll_vertical_outline"sv, mouse_scroll_vertical_outline);
	mouse_small.wrapper = *atlas.find(atlas.getUIPage(), "mouse_small");
	iconMap.insert_or_assign("mouse_small"sv, mouse_small);
	mouse_vertical.wrapper = *atlas.find(atlas.getUIPage(), "mouse_vertical");
	iconMap.insert_or_assign("mouse_vertical"sv, mouse_vertical);
	abnormal.wrapper = *atlas.find(atlas.getUIPage(), "abnormal");
	iconMap.insert_or_assign("abnormal"sv, abnormal);
	activity_source.wrapper = *atlas.find(atlas.getUIPage(), "activity-source");
	iconMap.insert_or_assign("activity-source"sv, activity_source);
	add_computer.wrapper = *atlas.find(atlas.getUIPage(), "add-computer");
	iconMap.insert_or_assign("add-computer"sv, add_computer);
	add_four.wrapper = *atlas.find(atlas.getUIPage(), "add-four");
	iconMap.insert_or_assign("add-four"sv, add_four);
	add_item.wrapper = *atlas.find(atlas.getUIPage(), "add-item");
	iconMap.insert_or_assign("add-item"sv, add_item);
	add_one.wrapper = *atlas.find(atlas.getUIPage(), "add-one");
	iconMap.insert_or_assign("add-one"sv, add_one);
	add_subset.wrapper = *atlas.find(atlas.getUIPage(), "add-subset");
	iconMap.insert_or_assign("add-subset"sv, add_subset);
	add_subtract.wrapper = *atlas.find(atlas.getUIPage(), "add-subtract");
	iconMap.insert_or_assign("add-subtract"sv, add_subtract);
	add_three.wrapper = *atlas.find(atlas.getUIPage(), "add-three");
	iconMap.insert_or_assign("add-three"sv, add_three);
	add.wrapper = *atlas.find(atlas.getUIPage(), "add");
	iconMap.insert_or_assign("add"sv, add);
	adjacent_item.wrapper = *atlas.find(atlas.getUIPage(), "adjacent-item");
	iconMap.insert_or_assign("adjacent-item"sv, adjacent_item);
	adjustment.wrapper = *atlas.find(atlas.getUIPage(), "adjustment");
	iconMap.insert_or_assign("adjustment"sv, adjustment);
	afferent_four.wrapper = *atlas.find(atlas.getUIPage(), "afferent-four");
	iconMap.insert_or_assign("afferent-four"sv, afferent_four);
	afferent_three.wrapper = *atlas.find(atlas.getUIPage(), "afferent-three");
	iconMap.insert_or_assign("afferent-three"sv, afferent_three);
	afferent_two.wrapper = *atlas.find(atlas.getUIPage(), "afferent-two");
	iconMap.insert_or_assign("afferent-two"sv, afferent_two);
	afferent.wrapper = *atlas.find(atlas.getUIPage(), "afferent");
	iconMap.insert_or_assign("afferent"sv, afferent);
	aiming.wrapper = *atlas.find(atlas.getUIPage(), "aiming");
	iconMap.insert_or_assign("aiming"sv, aiming);
	airplay.wrapper = *atlas.find(atlas.getUIPage(), "airplay");
	iconMap.insert_or_assign("airplay"sv, airplay);
	align_bottom_two.wrapper = *atlas.find(atlas.getUIPage(), "align-bottom-two");
	iconMap.insert_or_assign("align-bottom-two"sv, align_bottom_two);
	align_bottom.wrapper = *atlas.find(atlas.getUIPage(), "align-bottom");
	iconMap.insert_or_assign("align-bottom"sv, align_bottom);
	align_horizontal_center_two.wrapper = *atlas.find(atlas.getUIPage(), "align-horizontal-center-two");
	iconMap.insert_or_assign("align-horizontal-center-two"sv, align_horizontal_center_two);
	align_horizontally.wrapper = *atlas.find(atlas.getUIPage(), "align-horizontally");
	iconMap.insert_or_assign("align-horizontally"sv, align_horizontally);
	align_left_one.wrapper = *atlas.find(atlas.getUIPage(), "align-left-one");
	iconMap.insert_or_assign("align-left-one"sv, align_left_one);
	align_left_two.wrapper = *atlas.find(atlas.getUIPage(), "align-left-two");
	iconMap.insert_or_assign("align-left-two"sv, align_left_two);
	align_left.wrapper = *atlas.find(atlas.getUIPage(), "align-left");
	iconMap.insert_or_assign("align-left"sv, align_left);
	align_right_one.wrapper = *atlas.find(atlas.getUIPage(), "align-right-one");
	iconMap.insert_or_assign("align-right-one"sv, align_right_one);
	align_right_two.wrapper = *atlas.find(atlas.getUIPage(), "align-right-two");
	iconMap.insert_or_assign("align-right-two"sv, align_right_two);
	align_right.wrapper = *atlas.find(atlas.getUIPage(), "align-right");
	iconMap.insert_or_assign("align-right"sv, align_right);
	align_text_both_one.wrapper = *atlas.find(atlas.getUIPage(), "align-text-both-one");
	iconMap.insert_or_assign("align-text-both-one"sv, align_text_both_one);
	align_text_both.wrapper = *atlas.find(atlas.getUIPage(), "align-text-both");
	iconMap.insert_or_assign("align-text-both"sv, align_text_both);
	align_text_bottom_one.wrapper = *atlas.find(atlas.getUIPage(), "align-text-bottom-one");
	iconMap.insert_or_assign("align-text-bottom-one"sv, align_text_bottom_one);
	align_text_bottom.wrapper = *atlas.find(atlas.getUIPage(), "align-text-bottom");
	iconMap.insert_or_assign("align-text-bottom"sv, align_text_bottom);
	align_text_center_one.wrapper = *atlas.find(atlas.getUIPage(), "align-text-center-one");
	iconMap.insert_or_assign("align-text-center-one"sv, align_text_center_one);
	align_text_center.wrapper = *atlas.find(atlas.getUIPage(), "align-text-center");
	iconMap.insert_or_assign("align-text-center"sv, align_text_center);
	align_text_left_one.wrapper = *atlas.find(atlas.getUIPage(), "align-text-left-one");
	iconMap.insert_or_assign("align-text-left-one"sv, align_text_left_one);
	align_text_left.wrapper = *atlas.find(atlas.getUIPage(), "align-text-left");
	iconMap.insert_or_assign("align-text-left"sv, align_text_left);
	align_text_middle_one.wrapper = *atlas.find(atlas.getUIPage(), "align-text-middle-one");
	iconMap.insert_or_assign("align-text-middle-one"sv, align_text_middle_one);
	align_text_middle.wrapper = *atlas.find(atlas.getUIPage(), "align-text-middle");
	iconMap.insert_or_assign("align-text-middle"sv, align_text_middle);
	align_text_right_one.wrapper = *atlas.find(atlas.getUIPage(), "align-text-right-one");
	iconMap.insert_or_assign("align-text-right-one"sv, align_text_right_one);
	align_text_right.wrapper = *atlas.find(atlas.getUIPage(), "align-text-right");
	iconMap.insert_or_assign("align-text-right"sv, align_text_right);
	align_text_top_one.wrapper = *atlas.find(atlas.getUIPage(), "align-text-top-one");
	iconMap.insert_or_assign("align-text-top-one"sv, align_text_top_one);
	align_text_top.wrapper = *atlas.find(atlas.getUIPage(), "align-text-top");
	iconMap.insert_or_assign("align-text-top"sv, align_text_top);
	align_top_two.wrapper = *atlas.find(atlas.getUIPage(), "align-top-two");
	iconMap.insert_or_assign("align-top-two"sv, align_top_two);
	align_top.wrapper = *atlas.find(atlas.getUIPage(), "align-top");
	iconMap.insert_or_assign("align-top"sv, align_top);
	align_vertical_center_two.wrapper = *atlas.find(atlas.getUIPage(), "align-vertical-center-two");
	iconMap.insert_or_assign("align-vertical-center-two"sv, align_vertical_center_two);
	align_vertically.wrapper = *atlas.find(atlas.getUIPage(), "align-vertically");
	iconMap.insert_or_assign("align-vertically"sv, align_vertically);
	alignment_bottom_center.wrapper = *atlas.find(atlas.getUIPage(), "alignment-bottom-center");
	iconMap.insert_or_assign("alignment-bottom-center"sv, alignment_bottom_center);
	alignment_bottom_left.wrapper = *atlas.find(atlas.getUIPage(), "alignment-bottom-left");
	iconMap.insert_or_assign("alignment-bottom-left"sv, alignment_bottom_left);
	alignment_bottom_right.wrapper = *atlas.find(atlas.getUIPage(), "alignment-bottom-right");
	iconMap.insert_or_assign("alignment-bottom-right"sv, alignment_bottom_right);
	alignment_horizontal_bottom.wrapper = *atlas.find(atlas.getUIPage(), "alignment-horizontal-bottom");
	iconMap.insert_or_assign("alignment-horizontal-bottom"sv, alignment_horizontal_bottom);
	alignment_horizontal_center.wrapper = *atlas.find(atlas.getUIPage(), "alignment-horizontal-center");
	iconMap.insert_or_assign("alignment-horizontal-center"sv, alignment_horizontal_center);
	alignment_horizontal_top.wrapper = *atlas.find(atlas.getUIPage(), "alignment-horizontal-top");
	iconMap.insert_or_assign("alignment-horizontal-top"sv, alignment_horizontal_top);
	alignment_left_bottom.wrapper = *atlas.find(atlas.getUIPage(), "alignment-left-bottom");
	iconMap.insert_or_assign("alignment-left-bottom"sv, alignment_left_bottom);
	alignment_left_center.wrapper = *atlas.find(atlas.getUIPage(), "alignment-left-center");
	iconMap.insert_or_assign("alignment-left-center"sv, alignment_left_center);
	alignment_left_top.wrapper = *atlas.find(atlas.getUIPage(), "alignment-left-top");
	iconMap.insert_or_assign("alignment-left-top"sv, alignment_left_top);
	alignment_right_bottom.wrapper = *atlas.find(atlas.getUIPage(), "alignment-right-bottom");
	iconMap.insert_or_assign("alignment-right-bottom"sv, alignment_right_bottom);
	alignment_right_center.wrapper = *atlas.find(atlas.getUIPage(), "alignment-right-center");
	iconMap.insert_or_assign("alignment-right-center"sv, alignment_right_center);
	alignment_right_top.wrapper = *atlas.find(atlas.getUIPage(), "alignment-right-top");
	iconMap.insert_or_assign("alignment-right-top"sv, alignment_right_top);
	alignment_top_center.wrapper = *atlas.find(atlas.getUIPage(), "alignment-top-center");
	iconMap.insert_or_assign("alignment-top-center"sv, alignment_top_center);
	alignment_top_left.wrapper = *atlas.find(atlas.getUIPage(), "alignment-top-left");
	iconMap.insert_or_assign("alignment-top-left"sv, alignment_top_left);
	alignment_top_right.wrapper = *atlas.find(atlas.getUIPage(), "alignment-top-right");
	iconMap.insert_or_assign("alignment-top-right"sv, alignment_top_right);
	alignment_vertical_center.wrapper = *atlas.find(atlas.getUIPage(), "alignment-vertical-center");
	iconMap.insert_or_assign("alignment-vertical-center"sv, alignment_vertical_center);
	alignment_vertical_left.wrapper = *atlas.find(atlas.getUIPage(), "alignment-vertical-left");
	iconMap.insert_or_assign("alignment-vertical-left"sv, alignment_vertical_left);
	alignment_vertical_right.wrapper = *atlas.find(atlas.getUIPage(), "alignment-vertical-right");
	iconMap.insert_or_assign("alignment-vertical-right"sv, alignment_vertical_right);
	all_application.wrapper = *atlas.find(atlas.getUIPage(), "all-application");
	iconMap.insert_or_assign("all-application"sv, all_application);
	alphabetical_sorting_two.wrapper = *atlas.find(atlas.getUIPage(), "alphabetical-sorting-two");
	iconMap.insert_or_assign("alphabetical-sorting-two"sv, alphabetical_sorting_two);
	alphabetical_sorting.wrapper = *atlas.find(atlas.getUIPage(), "alphabetical-sorting");
	iconMap.insert_or_assign("alphabetical-sorting"sv, alphabetical_sorting);
	anchor_one.wrapper = *atlas.find(atlas.getUIPage(), "anchor-one");
	iconMap.insert_or_assign("anchor-one"sv, anchor_one);
	anchor_round.wrapper = *atlas.find(atlas.getUIPage(), "anchor-round");
	iconMap.insert_or_assign("anchor-round"sv, anchor_round);
	anchor_squre.wrapper = *atlas.find(atlas.getUIPage(), "anchor-squre");
	iconMap.insert_or_assign("anchor-squre"sv, anchor_squre);
	anchor.wrapper = *atlas.find(atlas.getUIPage(), "anchor");
	iconMap.insert_or_assign("anchor"sv, anchor);
	api_app.wrapper = *atlas.find(atlas.getUIPage(), "api-app");
	iconMap.insert_or_assign("api-app"sv, api_app);
	api.wrapper = *atlas.find(atlas.getUIPage(), "api");
	iconMap.insert_or_assign("api"sv, api);
	applet_closed.wrapper = *atlas.find(atlas.getUIPage(), "applet-closed");
	iconMap.insert_or_assign("applet-closed"sv, applet_closed);
	application_menu.wrapper = *atlas.find(atlas.getUIPage(), "application-menu");
	iconMap.insert_or_assign("application-menu"sv, application_menu);
	application_two.wrapper = *atlas.find(atlas.getUIPage(), "application-two");
	iconMap.insert_or_assign("application-two"sv, application_two);
	arithmetic.wrapper = *atlas.find(atlas.getUIPage(), "arithmetic");
	iconMap.insert_or_assign("arithmetic"sv, arithmetic);
	arrow_circle_down.wrapper = *atlas.find(atlas.getUIPage(), "arrow-circle-down");
	iconMap.insert_or_assign("arrow-circle-down"sv, arrow_circle_down);
	arrow_circle_left.wrapper = *atlas.find(atlas.getUIPage(), "arrow-circle-left");
	iconMap.insert_or_assign("arrow-circle-left"sv, arrow_circle_left);
	arrow_circle_right.wrapper = *atlas.find(atlas.getUIPage(), "arrow-circle-right");
	iconMap.insert_or_assign("arrow-circle-right"sv, arrow_circle_right);
	arrow_circle_up.wrapper = *atlas.find(atlas.getUIPage(), "arrow-circle-up");
	iconMap.insert_or_assign("arrow-circle-up"sv, arrow_circle_up);
	arrow_down.wrapper = *atlas.find(atlas.getUIPage(), "arrow-down");
	iconMap.insert_or_assign("arrow-down"sv, arrow_down);
	arrow_left_down.wrapper = *atlas.find(atlas.getUIPage(), "arrow-left-down");
	iconMap.insert_or_assign("arrow-left-down"sv, arrow_left_down);
	arrow_left_up.wrapper = *atlas.find(atlas.getUIPage(), "arrow-left-up");
	iconMap.insert_or_assign("arrow-left-up"sv, arrow_left_up);
	arrow_left.wrapper = *atlas.find(atlas.getUIPage(), "arrow-left");
	iconMap.insert_or_assign("arrow-left"sv, arrow_left);
	arrow_right_down.wrapper = *atlas.find(atlas.getUIPage(), "arrow-right-down");
	iconMap.insert_or_assign("arrow-right-down"sv, arrow_right_down);
	arrow_right_up.wrapper = *atlas.find(atlas.getUIPage(), "arrow-right-up");
	iconMap.insert_or_assign("arrow-right-up"sv, arrow_right_up);
	arrow_right.wrapper = *atlas.find(atlas.getUIPage(), "arrow-right");
	iconMap.insert_or_assign("arrow-right"sv, arrow_right);
	arrow_up.wrapper = *atlas.find(atlas.getUIPage(), "arrow-up");
	iconMap.insert_or_assign("arrow-up"sv, arrow_up);
	assembly_line.wrapper = *atlas.find(atlas.getUIPage(), "assembly-line");
	iconMap.insert_or_assign("assembly-line"sv, assembly_line);
	audio_file.wrapper = *atlas.find(atlas.getUIPage(), "audio-file");
	iconMap.insert_or_assign("audio-file"sv, audio_file);
	back_one.wrapper = *atlas.find(atlas.getUIPage(), "back-one");
	iconMap.insert_or_assign("back-one"sv, back_one);
	bezier_curve.wrapper = *atlas.find(atlas.getUIPage(), "bezier-curve");
	iconMap.insert_or_assign("bezier-curve"sv, bezier_curve);
	bill.wrapper = *atlas.find(atlas.getUIPage(), "bill");
	iconMap.insert_or_assign("bill"sv, bill);
	block.wrapper = *atlas.find(atlas.getUIPage(), "block");
	iconMap.insert_or_assign("block"sv, block);
	book_open.wrapper = *atlas.find(atlas.getUIPage(), "book-open");
	iconMap.insert_or_assign("book-open"sv, book_open);
	bookmark_one.wrapper = *atlas.find(atlas.getUIPage(), "bookmark-one");
	iconMap.insert_or_assign("bookmark-one"sv, bookmark_one);
	bookmark.wrapper = *atlas.find(atlas.getUIPage(), "bookmark");
	iconMap.insert_or_assign("bookmark"sv, bookmark);
	branch_one.wrapper = *atlas.find(atlas.getUIPage(), "branch-one");
	iconMap.insert_or_assign("branch-one"sv, branch_one);
	branch_two.wrapper = *atlas.find(atlas.getUIPage(), "branch-two");
	iconMap.insert_or_assign("branch-two"sv, branch_two);
	branch.wrapper = *atlas.find(atlas.getUIPage(), "branch");
	iconMap.insert_or_assign("branch"sv, branch);
	bring_to_front.wrapper = *atlas.find(atlas.getUIPage(), "bring-to-front");
	iconMap.insert_or_assign("bring-to-front"sv, bring_to_front);
	camera.wrapper = *atlas.find(atlas.getUIPage(), "camera");
	iconMap.insert_or_assign("camera"sv, camera);
	carousel.wrapper = *atlas.find(atlas.getUIPage(), "carousel");
	iconMap.insert_or_assign("carousel"sv, carousel);
	caution.wrapper = *atlas.find(atlas.getUIPage(), "caution");
	iconMap.insert_or_assign("caution"sv, caution);
	change.wrapper = *atlas.find(atlas.getUIPage(), "change");
	iconMap.insert_or_assign("change"sv, change);
	chart_histogram_one.wrapper = *atlas.find(atlas.getUIPage(), "chart-histogram-one");
	iconMap.insert_or_assign("chart-histogram-one"sv, chart_histogram_one);
	chart_histogram.wrapper = *atlas.find(atlas.getUIPage(), "chart-histogram");
	iconMap.insert_or_assign("chart-histogram"sv, chart_histogram);
	check_one.wrapper = *atlas.find(atlas.getUIPage(), "check-one");
	iconMap.insert_or_assign("check-one"sv, check_one);
	check_small.wrapper = *atlas.find(atlas.getUIPage(), "check-small");
	iconMap.insert_or_assign("check-small"sv, check_small);
	check.wrapper = *atlas.find(atlas.getUIPage(), "check");
	iconMap.insert_or_assign("check"sv, check);
	checklist.wrapper = *atlas.find(atlas.getUIPage(), "checklist");
	iconMap.insert_or_assign("checklist"sv, checklist);
	chip.wrapper = *atlas.find(atlas.getUIPage(), "chip");
	iconMap.insert_or_assign("chip"sv, chip);
	circle_double_down.wrapper = *atlas.find(atlas.getUIPage(), "circle-double-down");
	iconMap.insert_or_assign("circle-double-down"sv, circle_double_down);
	circle_double_left.wrapper = *atlas.find(atlas.getUIPage(), "circle-double-left");
	iconMap.insert_or_assign("circle-double-left"sv, circle_double_left);
	circle_double_right.wrapper = *atlas.find(atlas.getUIPage(), "circle-double-right");
	iconMap.insert_or_assign("circle-double-right"sv, circle_double_right);
	circle_double_up.wrapper = *atlas.find(atlas.getUIPage(), "circle-double-up");
	iconMap.insert_or_assign("circle-double-up"sv, circle_double_up);
	circle_five_line.wrapper = *atlas.find(atlas.getUIPage(), "circle-five-line");
	iconMap.insert_or_assign("circle-five-line"sv, circle_five_line);
	circle_left_down.wrapper = *atlas.find(atlas.getUIPage(), "circle-left-down");
	iconMap.insert_or_assign("circle-left-down"sv, circle_left_down);
	circle_left_up.wrapper = *atlas.find(atlas.getUIPage(), "circle-left-up");
	iconMap.insert_or_assign("circle-left-up"sv, circle_left_up);
	circle_right_down.wrapper = *atlas.find(atlas.getUIPage(), "circle-right-down");
	iconMap.insert_or_assign("circle-right-down"sv, circle_right_down);
	circle_right_up.wrapper = *atlas.find(atlas.getUIPage(), "circle-right-up");
	iconMap.insert_or_assign("circle-right-up"sv, circle_right_up);
	circle_two_line.wrapper = *atlas.find(atlas.getUIPage(), "circle-two-line");
	iconMap.insert_or_assign("circle-two-line"sv, circle_two_line);
	circular_connection.wrapper = *atlas.find(atlas.getUIPage(), "circular-connection");
	iconMap.insert_or_assign("circular-connection"sv, circular_connection);
	click_to_fold.wrapper = *atlas.find(atlas.getUIPage(), "click-to-fold");
	iconMap.insert_or_assign("click-to-fold"sv, click_to_fold);
	clipboard.wrapper = *atlas.find(atlas.getUIPage(), "clipboard");
	iconMap.insert_or_assign("clipboard"sv, clipboard);
	close_one.wrapper = *atlas.find(atlas.getUIPage(), "close-one");
	iconMap.insert_or_assign("close-one"sv, close_one);
	close_small.wrapper = *atlas.find(atlas.getUIPage(), "close-small");
	iconMap.insert_or_assign("close-small"sv, close_small);
	close.wrapper = *atlas.find(atlas.getUIPage(), "close");
	iconMap.insert_or_assign("close"sv, close);
	clue.wrapper = *atlas.find(atlas.getUIPage(), "clue");
	iconMap.insert_or_assign("clue"sv, clue);
	code_brackets.wrapper = *atlas.find(atlas.getUIPage(), "code-brackets");
	iconMap.insert_or_assign("code-brackets"sv, code_brackets);
	code_computer.wrapper = *atlas.find(atlas.getUIPage(), "code-computer");
	iconMap.insert_or_assign("code-computer"sv, code_computer);
	code_download.wrapper = *atlas.find(atlas.getUIPage(), "code-download");
	iconMap.insert_or_assign("code-download"sv, code_download);
	code.wrapper = *atlas.find(atlas.getUIPage(), "code");
	iconMap.insert_or_assign("code"sv, code);
	collapse_text_input.wrapper = *atlas.find(atlas.getUIPage(), "collapse-text-input");
	iconMap.insert_or_assign("collapse-text-input"sv, collapse_text_input);
	collection_files.wrapper = *atlas.find(atlas.getUIPage(), "collection-files");
	iconMap.insert_or_assign("collection-files"sv, collection_files);
	color_card.wrapper = *atlas.find(atlas.getUIPage(), "color-card");
	iconMap.insert_or_assign("color-card"sv, color_card);
	compass.wrapper = *atlas.find(atlas.getUIPage(), "compass");
	iconMap.insert_or_assign("compass"sv, compass);
	config.wrapper = *atlas.find(atlas.getUIPage(), "config");
	iconMap.insert_or_assign("config"sv, config);
	connection_arrow.wrapper = *atlas.find(atlas.getUIPage(), "connection-arrow");
	iconMap.insert_or_assign("connection-arrow"sv, connection_arrow);
	copy_link.wrapper = *atlas.find(atlas.getUIPage(), "copy-link");
	iconMap.insert_or_assign("copy-link"sv, copy_link);
	copy.wrapper = *atlas.find(atlas.getUIPage(), "copy");
	iconMap.insert_or_assign("copy"sv, copy);
	corner_down_left.wrapper = *atlas.find(atlas.getUIPage(), "corner-down-left");
	iconMap.insert_or_assign("corner-down-left"sv, corner_down_left);
	corner_down_right.wrapper = *atlas.find(atlas.getUIPage(), "corner-down-right");
	iconMap.insert_or_assign("corner-down-right"sv, corner_down_right);
	corner_left_down.wrapper = *atlas.find(atlas.getUIPage(), "corner-left-down");
	iconMap.insert_or_assign("corner-left-down"sv, corner_left_down);
	corner_left_up.wrapper = *atlas.find(atlas.getUIPage(), "corner-left-up");
	iconMap.insert_or_assign("corner-left-up"sv, corner_left_up);
	corner_right_down.wrapper = *atlas.find(atlas.getUIPage(), "corner-right-down");
	iconMap.insert_or_assign("corner-right-down"sv, corner_right_down);
	corner_right_up.wrapper = *atlas.find(atlas.getUIPage(), "corner-right-up");
	iconMap.insert_or_assign("corner-right-up"sv, corner_right_up);
	corner_up_left.wrapper = *atlas.find(atlas.getUIPage(), "corner-up-left");
	iconMap.insert_or_assign("corner-up-left"sv, corner_up_left);
	corner_up_right.wrapper = *atlas.find(atlas.getUIPage(), "corner-up-right");
	iconMap.insert_or_assign("corner-up-right"sv, corner_up_right);
	correct.wrapper = *atlas.find(atlas.getUIPage(), "correct");
	iconMap.insert_or_assign("correct"sv, correct);
	cross_ring_two.wrapper = *atlas.find(atlas.getUIPage(), "cross-ring-two");
	iconMap.insert_or_assign("cross-ring-two"sv, cross_ring_two);
	cube_three.wrapper = *atlas.find(atlas.getUIPage(), "cube-three");
	iconMap.insert_or_assign("cube-three"sv, cube_three);
	curve_adjustment.wrapper = *atlas.find(atlas.getUIPage(), "curve-adjustment");
	iconMap.insert_or_assign("curve-adjustment"sv, curve_adjustment);
	cutting.wrapper = *atlas.find(atlas.getUIPage(), "cutting");
	iconMap.insert_or_assign("cutting"sv, cutting);
	cycle_arrow.wrapper = *atlas.find(atlas.getUIPage(), "cycle-arrow");
	iconMap.insert_or_assign("cycle-arrow"sv, cycle_arrow);
	cycle_movement.wrapper = *atlas.find(atlas.getUIPage(), "cycle-movement");
	iconMap.insert_or_assign("cycle-movement"sv, cycle_movement);
	cycle.wrapper = *atlas.find(atlas.getUIPage(), "cycle");
	iconMap.insert_or_assign("cycle"sv, cycle);
	data_display.wrapper = *atlas.find(atlas.getUIPage(), "data-display");
	iconMap.insert_or_assign("data-display"sv, data_display);
	data_file.wrapper = *atlas.find(atlas.getUIPage(), "data-file");
	iconMap.insert_or_assign("data-file"sv, data_file);
	data_lock.wrapper = *atlas.find(atlas.getUIPage(), "data-lock");
	iconMap.insert_or_assign("data-lock"sv, data_lock);
	data_switching.wrapper = *atlas.find(atlas.getUIPage(), "data-switching");
	iconMap.insert_or_assign("data-switching"sv, data_switching);
	data_user.wrapper = *atlas.find(atlas.getUIPage(), "data-user");
	iconMap.insert_or_assign("data-user"sv, data_user);
	data.wrapper = *atlas.find(atlas.getUIPage(), "data");
	iconMap.insert_or_assign("data"sv, data);
	delete_five.wrapper = *atlas.find(atlas.getUIPage(), "delete-five");
	iconMap.insert_or_assign("delete-five"sv, delete_five);
	delete_four.wrapper = *atlas.find(atlas.getUIPage(), "delete-four");
	iconMap.insert_or_assign("delete-four"sv, delete_four);
	delete_two.wrapper = *atlas.find(atlas.getUIPage(), "delete-two");
	iconMap.insert_or_assign("delete-two"sv, delete_two);
	diamond_one.wrapper = *atlas.find(atlas.getUIPage(), "diamond-one");
	iconMap.insert_or_assign("diamond-one"sv, diamond_one);
	diamond_three.wrapper = *atlas.find(atlas.getUIPage(), "diamond-three");
	iconMap.insert_or_assign("diamond-three"sv, diamond_three);
	diamond_two.wrapper = *atlas.find(atlas.getUIPage(), "diamond-two");
	iconMap.insert_or_assign("diamond-two"sv, diamond_two);
	dividing_line_one.wrapper = *atlas.find(atlas.getUIPage(), "dividing-line-one");
	iconMap.insert_or_assign("dividing-line-one"sv, dividing_line_one);
	division.wrapper = *atlas.find(atlas.getUIPage(), "division");
	iconMap.insert_or_assign("division"sv, division);
	done_all.wrapper = *atlas.find(atlas.getUIPage(), "done-all");
	iconMap.insert_or_assign("done-all"sv, done_all);
	dot.wrapper = *atlas.find(atlas.getUIPage(), "dot");
	iconMap.insert_or_assign("dot"sv, dot);
	double_down.wrapper = *atlas.find(atlas.getUIPage(), "double-down");
	iconMap.insert_or_assign("double-down"sv, double_down);
	double_left.wrapper = *atlas.find(atlas.getUIPage(), "double-left");
	iconMap.insert_or_assign("double-left"sv, double_left);
	double_right.wrapper = *atlas.find(atlas.getUIPage(), "double-right");
	iconMap.insert_or_assign("double-right"sv, double_right);
	double_up.wrapper = *atlas.find(atlas.getUIPage(), "double-up");
	iconMap.insert_or_assign("double-up"sv, double_up);
	down_c.wrapper = *atlas.find(atlas.getUIPage(), "down-c");
	iconMap.insert_or_assign("down-c"sv, down_c);
	down_one.wrapper = *atlas.find(atlas.getUIPage(), "down-one");
	iconMap.insert_or_assign("down-one"sv, down_one);
	down_picture.wrapper = *atlas.find(atlas.getUIPage(), "down-picture");
	iconMap.insert_or_assign("down-picture"sv, down_picture);
	down_small.wrapper = *atlas.find(atlas.getUIPage(), "down-small");
	iconMap.insert_or_assign("down-small"sv, down_small);
	down_square.wrapper = *atlas.find(atlas.getUIPage(), "down-square");
	iconMap.insert_or_assign("down-square"sv, down_square);
	down.wrapper = *atlas.find(atlas.getUIPage(), "down");
	iconMap.insert_or_assign("down"sv, down);
	download_one.wrapper = *atlas.find(atlas.getUIPage(), "download-one");
	iconMap.insert_or_assign("download-one"sv, download_one);
	download_three.wrapper = *atlas.find(atlas.getUIPage(), "download-three");
	iconMap.insert_or_assign("download-three"sv, download_three);
	download_two.wrapper = *atlas.find(atlas.getUIPage(), "download-two");
	iconMap.insert_or_assign("download-two"sv, download_two);
	download.wrapper = *atlas.find(atlas.getUIPage(), "download");
	iconMap.insert_or_assign("download"sv, download);
	drag.wrapper = *atlas.find(atlas.getUIPage(), "drag");
	iconMap.insert_or_assign("drag"sv, drag);
	drop_down_list.wrapper = *atlas.find(atlas.getUIPage(), "drop-down-list");
	iconMap.insert_or_assign("drop-down-list"sv, drop_down_list);
	drop_shadow_down.wrapper = *atlas.find(atlas.getUIPage(), "drop-shadow-down");
	iconMap.insert_or_assign("drop-shadow-down"sv, drop_shadow_down);
	drop_shadow_left.wrapper = *atlas.find(atlas.getUIPage(), "drop-shadow-left");
	iconMap.insert_or_assign("drop-shadow-left"sv, drop_shadow_left);
	drop_shadow_right.wrapper = *atlas.find(atlas.getUIPage(), "drop-shadow-right");
	iconMap.insert_or_assign("drop-shadow-right"sv, drop_shadow_right);
	drop_shadow_up.wrapper = *atlas.find(atlas.getUIPage(), "drop-shadow-up");
	iconMap.insert_or_assign("drop-shadow-up"sv, drop_shadow_up);
	efferent_four.wrapper = *atlas.find(atlas.getUIPage(), "efferent-four");
	iconMap.insert_or_assign("efferent-four"sv, efferent_four);
	efferent_three.wrapper = *atlas.find(atlas.getUIPage(), "efferent-three");
	iconMap.insert_or_assign("efferent-three"sv, efferent_three);
	endless.wrapper = *atlas.find(atlas.getUIPage(), "endless");
	iconMap.insert_or_assign("endless"sv, endless);
	endpoint_displacement.wrapper = *atlas.find(atlas.getUIPage(), "endpoint-displacement");
	iconMap.insert_or_assign("endpoint-displacement"sv, endpoint_displacement);
	equalizer.wrapper = *atlas.find(atlas.getUIPage(), "equalizer");
	iconMap.insert_or_assign("equalizer"sv, equalizer);
	error_prompt.wrapper = *atlas.find(atlas.getUIPage(), "error-prompt");
	iconMap.insert_or_assign("error-prompt"sv, error_prompt);
	error.wrapper = *atlas.find(atlas.getUIPage(), "error");
	iconMap.insert_or_assign("error"sv, error);
	exclude_selection.wrapper = *atlas.find(atlas.getUIPage(), "exclude-selection");
	iconMap.insert_or_assign("exclude-selection"sv, exclude_selection);
	expand_down_one.wrapper = *atlas.find(atlas.getUIPage(), "expand-down-one");
	iconMap.insert_or_assign("expand-down-one"sv, expand_down_one);
	expand_down.wrapper = *atlas.find(atlas.getUIPage(), "expand-down");
	iconMap.insert_or_assign("expand-down"sv, expand_down);
	expand_left_and_right.wrapper = *atlas.find(atlas.getUIPage(), "expand-left-and-right");
	iconMap.insert_or_assign("expand-left-and-right"sv, expand_left_and_right);
	expand_left.wrapper = *atlas.find(atlas.getUIPage(), "expand-left");
	iconMap.insert_or_assign("expand-left"sv, expand_left);
	expand_right.wrapper = *atlas.find(atlas.getUIPage(), "expand-right");
	iconMap.insert_or_assign("expand-right"sv, expand_right);
	expand_text_input.wrapper = *atlas.find(atlas.getUIPage(), "expand-text-input");
	iconMap.insert_or_assign("expand-text-input"sv, expand_text_input);
	expand_up.wrapper = *atlas.find(atlas.getUIPage(), "expand-up");
	iconMap.insert_or_assign("expand-up"sv, expand_up);
	experiment_one.wrapper = *atlas.find(atlas.getUIPage(), "experiment-one");
	iconMap.insert_or_assign("experiment-one"sv, experiment_one);
	extend.wrapper = *atlas.find(atlas.getUIPage(), "extend");
	iconMap.insert_or_assign("extend"sv, extend);
	figma_component.wrapper = *atlas.find(atlas.getUIPage(), "figma-component");
	iconMap.insert_or_assign("figma-component"sv, figma_component);
	figma_flatten_selection.wrapper = *atlas.find(atlas.getUIPage(), "figma-flatten-selection");
	iconMap.insert_or_assign("figma-flatten-selection"sv, figma_flatten_selection);
	file_addition_one.wrapper = *atlas.find(atlas.getUIPage(), "file-addition-one");
	iconMap.insert_or_assign("file-addition-one"sv, file_addition_one);
	file_addition.wrapper = *atlas.find(atlas.getUIPage(), "file-addition");
	iconMap.insert_or_assign("file-addition"sv, file_addition);
	file_cabinet.wrapper = *atlas.find(atlas.getUIPage(), "file-cabinet");
	iconMap.insert_or_assign("file-cabinet"sv, file_cabinet);
	file_code_one.wrapper = *atlas.find(atlas.getUIPage(), "file-code-one");
	iconMap.insert_or_assign("file-code-one"sv, file_code_one);
	file_code.wrapper = *atlas.find(atlas.getUIPage(), "file-code");
	iconMap.insert_or_assign("file-code"sv, file_code);
	file_collection_one.wrapper = *atlas.find(atlas.getUIPage(), "file-collection-one");
	iconMap.insert_or_assign("file-collection-one"sv, file_collection_one);
	file_collection.wrapper = *atlas.find(atlas.getUIPage(), "file-collection");
	iconMap.insert_or_assign("file-collection"sv, file_collection);
	file_conversion_one.wrapper = *atlas.find(atlas.getUIPage(), "file-conversion-one");
	iconMap.insert_or_assign("file-conversion-one"sv, file_conversion_one);
	file_conversion.wrapper = *atlas.find(atlas.getUIPage(), "file-conversion");
	iconMap.insert_or_assign("file-conversion"sv, file_conversion);
	file_date_one.wrapper = *atlas.find(atlas.getUIPage(), "file-date-one");
	iconMap.insert_or_assign("file-date-one"sv, file_date_one);
	file_date.wrapper = *atlas.find(atlas.getUIPage(), "file-date");
	iconMap.insert_or_assign("file-date"sv, file_date);
	file_display_one.wrapper = *atlas.find(atlas.getUIPage(), "file-display-one");
	iconMap.insert_or_assign("file-display-one"sv, file_display_one);
	file_display.wrapper = *atlas.find(atlas.getUIPage(), "file-display");
	iconMap.insert_or_assign("file-display"sv, file_display);
	file_doc.wrapper = *atlas.find(atlas.getUIPage(), "file-doc");
	iconMap.insert_or_assign("file-doc"sv, file_doc);
	file_editing_one.wrapper = *atlas.find(atlas.getUIPage(), "file-editing-one");
	iconMap.insert_or_assign("file-editing-one"sv, file_editing_one);
	file_editing.wrapper = *atlas.find(atlas.getUIPage(), "file-editing");
	iconMap.insert_or_assign("file-editing"sv, file_editing);
	file_excel.wrapper = *atlas.find(atlas.getUIPage(), "file-excel");
	iconMap.insert_or_assign("file-excel"sv, file_excel);
	file_failed_one.wrapper = *atlas.find(atlas.getUIPage(), "file-failed-one");
	iconMap.insert_or_assign("file-failed-one"sv, file_failed_one);
	file_failed.wrapper = *atlas.find(atlas.getUIPage(), "file-failed");
	iconMap.insert_or_assign("file-failed"sv, file_failed);
	file_focus_one.wrapper = *atlas.find(atlas.getUIPage(), "file-focus-one");
	iconMap.insert_or_assign("file-focus-one"sv, file_focus_one);
	file_focus.wrapper = *atlas.find(atlas.getUIPage(), "file-focus");
	iconMap.insert_or_assign("file-focus"sv, file_focus);
	file_gif.wrapper = *atlas.find(atlas.getUIPage(), "file-gif");
	iconMap.insert_or_assign("file-gif"sv, file_gif);
	file_hash_one.wrapper = *atlas.find(atlas.getUIPage(), "file-hash-one");
	iconMap.insert_or_assign("file-hash-one"sv, file_hash_one);
	file_hash.wrapper = *atlas.find(atlas.getUIPage(), "file-hash");
	iconMap.insert_or_assign("file-hash"sv, file_hash);
	file_hiding_one.wrapper = *atlas.find(atlas.getUIPage(), "file-hiding-one");
	iconMap.insert_or_assign("file-hiding-one"sv, file_hiding_one);
	file_hiding.wrapper = *atlas.find(atlas.getUIPage(), "file-hiding");
	iconMap.insert_or_assign("file-hiding"sv, file_hiding);
	file_jpg.wrapper = *atlas.find(atlas.getUIPage(), "file-jpg");
	iconMap.insert_or_assign("file-jpg"sv, file_jpg);
	file_lock_one.wrapper = *atlas.find(atlas.getUIPage(), "file-lock-one");
	iconMap.insert_or_assign("file-lock-one"sv, file_lock_one);
	file_lock.wrapper = *atlas.find(atlas.getUIPage(), "file-lock");
	iconMap.insert_or_assign("file-lock"sv, file_lock);
	file_music_one.wrapper = *atlas.find(atlas.getUIPage(), "file-music-one");
	iconMap.insert_or_assign("file-music-one"sv, file_music_one);
	file_music.wrapper = *atlas.find(atlas.getUIPage(), "file-music");
	iconMap.insert_or_assign("file-music"sv, file_music);
	file_pdf_one.wrapper = *atlas.find(atlas.getUIPage(), "file-pdf-one");
	iconMap.insert_or_assign("file-pdf-one"sv, file_pdf_one);
	file_pdf.wrapper = *atlas.find(atlas.getUIPage(), "file-pdf");
	iconMap.insert_or_assign("file-pdf"sv, file_pdf);
	file_ppt.wrapper = *atlas.find(atlas.getUIPage(), "file-ppt");
	iconMap.insert_or_assign("file-ppt"sv, file_ppt);
	file_protection_one.wrapper = *atlas.find(atlas.getUIPage(), "file-protection-one");
	iconMap.insert_or_assign("file-protection-one"sv, file_protection_one);
	file_protection.wrapper = *atlas.find(atlas.getUIPage(), "file-protection");
	iconMap.insert_or_assign("file-protection"sv, file_protection);
	file_quality_one.wrapper = *atlas.find(atlas.getUIPage(), "file-quality-one");
	iconMap.insert_or_assign("file-quality-one"sv, file_quality_one);
	file_quality.wrapper = *atlas.find(atlas.getUIPage(), "file-quality");
	iconMap.insert_or_assign("file-quality"sv, file_quality);
	file_question.wrapper = *atlas.find(atlas.getUIPage(), "file-question");
	iconMap.insert_or_assign("file-question"sv, file_question);
	file_removal_one.wrapper = *atlas.find(atlas.getUIPage(), "file-removal-one");
	iconMap.insert_or_assign("file-removal-one"sv, file_removal_one);
	file_removal.wrapper = *atlas.find(atlas.getUIPage(), "file-removal");
	iconMap.insert_or_assign("file-removal"sv, file_removal);
	file_search_one.wrapper = *atlas.find(atlas.getUIPage(), "file-search-one");
	iconMap.insert_or_assign("file-search-one"sv, file_search_one);
	file_search_two.wrapper = *atlas.find(atlas.getUIPage(), "file-search-two");
	iconMap.insert_or_assign("file-search-two"sv, file_search_two);
	file_search.wrapper = *atlas.find(atlas.getUIPage(), "file-search");
	iconMap.insert_or_assign("file-search"sv, file_search);
	file_settings_one.wrapper = *atlas.find(atlas.getUIPage(), "file-settings-one");
	iconMap.insert_or_assign("file-settings-one"sv, file_settings_one);
	file_settings.wrapper = *atlas.find(atlas.getUIPage(), "file-settings");
	iconMap.insert_or_assign("file-settings"sv, file_settings);
	file_staff_one.wrapper = *atlas.find(atlas.getUIPage(), "file-staff-one");
	iconMap.insert_or_assign("file-staff-one"sv, file_staff_one);
	file_staff.wrapper = *atlas.find(atlas.getUIPage(), "file-staff");
	iconMap.insert_or_assign("file-staff"sv, file_staff);
	file_success_one.wrapper = *atlas.find(atlas.getUIPage(), "file-success-one");
	iconMap.insert_or_assign("file-success-one"sv, file_success_one);
	file_success.wrapper = *atlas.find(atlas.getUIPage(), "file-success");
	iconMap.insert_or_assign("file-success"sv, file_success);
	file_text_one.wrapper = *atlas.find(atlas.getUIPage(), "file-text-one");
	iconMap.insert_or_assign("file-text-one"sv, file_text_one);
	file_text.wrapper = *atlas.find(atlas.getUIPage(), "file-text");
	iconMap.insert_or_assign("file-text"sv, file_text);
	file_tips_one.wrapper = *atlas.find(atlas.getUIPage(), "file-tips-one");
	iconMap.insert_or_assign("file-tips-one"sv, file_tips_one);
	file_tips.wrapper = *atlas.find(atlas.getUIPage(), "file-tips");
	iconMap.insert_or_assign("file-tips"sv, file_tips);
	file_txt_one.wrapper = *atlas.find(atlas.getUIPage(), "file-txt-one");
	iconMap.insert_or_assign("file-txt-one"sv, file_txt_one);
	file_txt.wrapper = *atlas.find(atlas.getUIPage(), "file-txt");
	iconMap.insert_or_assign("file-txt"sv, file_txt);
	file_withdrawal_one.wrapper = *atlas.find(atlas.getUIPage(), "file-withdrawal-one");
	iconMap.insert_or_assign("file-withdrawal-one"sv, file_withdrawal_one);
	file_withdrawal.wrapper = *atlas.find(atlas.getUIPage(), "file-withdrawal");
	iconMap.insert_or_assign("file-withdrawal"sv, file_withdrawal);
	file_word.wrapper = *atlas.find(atlas.getUIPage(), "file-word");
	iconMap.insert_or_assign("file-word"sv, file_word);
	file_zip.wrapper = *atlas.find(atlas.getUIPage(), "file-zip");
	iconMap.insert_or_assign("file-zip"sv, file_zip);
	filter.wrapper = *atlas.find(atlas.getUIPage(), "filter");
	iconMap.insert_or_assign("filter"sv, filter);
	fold_up_one.wrapper = *atlas.find(atlas.getUIPage(), "fold-up-one");
	iconMap.insert_or_assign("fold-up-one"sv, fold_up_one);
	folder_block_one.wrapper = *atlas.find(atlas.getUIPage(), "folder-block-one");
	iconMap.insert_or_assign("folder-block-one"sv, folder_block_one);
	folder_block.wrapper = *atlas.find(atlas.getUIPage(), "folder-block");
	iconMap.insert_or_assign("folder-block"sv, folder_block);
	folder_close.wrapper = *atlas.find(atlas.getUIPage(), "folder-close");
	iconMap.insert_or_assign("folder-close"sv, folder_close);
	folder_code_one.wrapper = *atlas.find(atlas.getUIPage(), "folder-code-one");
	iconMap.insert_or_assign("folder-code-one"sv, folder_code_one);
	folder_code.wrapper = *atlas.find(atlas.getUIPage(), "folder-code");
	iconMap.insert_or_assign("folder-code"sv, folder_code);
	folder_conversion_one.wrapper = *atlas.find(atlas.getUIPage(), "folder-conversion-one");
	iconMap.insert_or_assign("folder-conversion-one"sv, folder_conversion_one);
	folder_conversion.wrapper = *atlas.find(atlas.getUIPage(), "folder-conversion");
	iconMap.insert_or_assign("folder-conversion"sv, folder_conversion);
	folder_download.wrapper = *atlas.find(atlas.getUIPage(), "folder-download");
	iconMap.insert_or_assign("folder-download"sv, folder_download);
	folder_failed_one.wrapper = *atlas.find(atlas.getUIPage(), "folder-failed-one");
	iconMap.insert_or_assign("folder-failed-one"sv, folder_failed_one);
	folder_failed.wrapper = *atlas.find(atlas.getUIPage(), "folder-failed");
	iconMap.insert_or_assign("folder-failed"sv, folder_failed);
	folder_focus_one.wrapper = *atlas.find(atlas.getUIPage(), "folder-focus-one");
	iconMap.insert_or_assign("folder-focus-one"sv, folder_focus_one);
	folder_focus.wrapper = *atlas.find(atlas.getUIPage(), "folder-focus");
	iconMap.insert_or_assign("folder-focus"sv, folder_focus);
	folder_lock_one.wrapper = *atlas.find(atlas.getUIPage(), "folder-lock-one");
	iconMap.insert_or_assign("folder-lock-one"sv, folder_lock_one);
	folder_lock.wrapper = *atlas.find(atlas.getUIPage(), "folder-lock");
	iconMap.insert_or_assign("folder-lock"sv, folder_lock);
	folder_minus.wrapper = *atlas.find(atlas.getUIPage(), "folder-minus");
	iconMap.insert_or_assign("folder-minus"sv, folder_minus);
	folder_music_one.wrapper = *atlas.find(atlas.getUIPage(), "folder-music-one");
	iconMap.insert_or_assign("folder-music-one"sv, folder_music_one);
	folder_music.wrapper = *atlas.find(atlas.getUIPage(), "folder-music");
	iconMap.insert_or_assign("folder-music"sv, folder_music);
	folder_open.wrapper = *atlas.find(atlas.getUIPage(), "folder-open");
	iconMap.insert_or_assign("folder-open"sv, folder_open);
	folder_plus.wrapper = *atlas.find(atlas.getUIPage(), "folder-plus");
	iconMap.insert_or_assign("folder-plus"sv, folder_plus);
	folder_protection_one.wrapper = *atlas.find(atlas.getUIPage(), "folder-protection-one");
	iconMap.insert_or_assign("folder-protection-one"sv, folder_protection_one);
	folder_protection.wrapper = *atlas.find(atlas.getUIPage(), "folder-protection");
	iconMap.insert_or_assign("folder-protection"sv, folder_protection);
	folder_quality_one.wrapper = *atlas.find(atlas.getUIPage(), "folder-quality-one");
	iconMap.insert_or_assign("folder-quality-one"sv, folder_quality_one);
	folder_quality.wrapper = *atlas.find(atlas.getUIPage(), "folder-quality");
	iconMap.insert_or_assign("folder-quality"sv, folder_quality);
	folder_search_one.wrapper = *atlas.find(atlas.getUIPage(), "folder-search-one");
	iconMap.insert_or_assign("folder-search-one"sv, folder_search_one);
	folder_search.wrapper = *atlas.find(atlas.getUIPage(), "folder-search");
	iconMap.insert_or_assign("folder-search"sv, folder_search);
	folder_settings_one.wrapper = *atlas.find(atlas.getUIPage(), "folder-settings-one");
	iconMap.insert_or_assign("folder-settings-one"sv, folder_settings_one);
	folder_settings.wrapper = *atlas.find(atlas.getUIPage(), "folder-settings");
	iconMap.insert_or_assign("folder-settings"sv, folder_settings);
	folder_success_one.wrapper = *atlas.find(atlas.getUIPage(), "folder-success-one");
	iconMap.insert_or_assign("folder-success-one"sv, folder_success_one);
	folder_success.wrapper = *atlas.find(atlas.getUIPage(), "folder-success");
	iconMap.insert_or_assign("folder-success"sv, folder_success);
	folder_upload.wrapper = *atlas.find(atlas.getUIPage(), "folder-upload");
	iconMap.insert_or_assign("folder-upload"sv, folder_upload);
	folder_withdrawal_one.wrapper = *atlas.find(atlas.getUIPage(), "folder-withdrawal-one");
	iconMap.insert_or_assign("folder-withdrawal-one"sv, folder_withdrawal_one);
	folder_withdrawal.wrapper = *atlas.find(atlas.getUIPage(), "folder-withdrawal");
	iconMap.insert_or_assign("folder-withdrawal"sv, folder_withdrawal);
	font_search.wrapper = *atlas.find(atlas.getUIPage(), "font-search");
	iconMap.insert_or_assign("font-search"sv, font_search);
	font_size.wrapper = *atlas.find(atlas.getUIPage(), "font-size");
	iconMap.insert_or_assign("font-size"sv, font_size);
	forbid.wrapper = *atlas.find(atlas.getUIPage(), "forbid");
	iconMap.insert_or_assign("forbid"sv, forbid);
	form_one.wrapper = *atlas.find(atlas.getUIPage(), "form-one");
	iconMap.insert_or_assign("form-one"sv, form_one);
	formula.wrapper = *atlas.find(atlas.getUIPage(), "formula");
	iconMap.insert_or_assign("formula"sv, formula);
	freeze_column.wrapper = *atlas.find(atlas.getUIPage(), "freeze-column");
	iconMap.insert_or_assign("freeze-column"sv, freeze_column);
	freeze_line.wrapper = *atlas.find(atlas.getUIPage(), "freeze-line");
	iconMap.insert_or_assign("freeze-line"sv, freeze_line);
	full_screen_one.wrapper = *atlas.find(atlas.getUIPage(), "full-screen-one");
	iconMap.insert_or_assign("full-screen-one"sv, full_screen_one);
	full_screen_play.wrapper = *atlas.find(atlas.getUIPage(), "full-screen-play");
	iconMap.insert_or_assign("full-screen-play"sv, full_screen_play);
	full_screen_two.wrapper = *atlas.find(atlas.getUIPage(), "full-screen-two");
	iconMap.insert_or_assign("full-screen-two"sv, full_screen_two);
	full_selection.wrapper = *atlas.find(atlas.getUIPage(), "full-selection");
	iconMap.insert_or_assign("full-selection"sv, full_selection);
	github_one.wrapper = *atlas.find(atlas.getUIPage(), "github-one");
	iconMap.insert_or_assign("github-one"sv, github_one);
	go_ahead.wrapper = *atlas.find(atlas.getUIPage(), "go-ahead");
	iconMap.insert_or_assign("go-ahead"sv, go_ahead);
	go_end.wrapper = *atlas.find(atlas.getUIPage(), "go-end");
	iconMap.insert_or_assign("go-end"sv, go_end);
	go_start.wrapper = *atlas.find(atlas.getUIPage(), "go-start");
	iconMap.insert_or_assign("go-start"sv, go_start);
	grid_nine.wrapper = *atlas.find(atlas.getUIPage(), "grid-nine");
	iconMap.insert_or_assign("grid-nine"sv, grid_nine);
	grid_three.wrapper = *atlas.find(atlas.getUIPage(), "grid-three");
	iconMap.insert_or_assign("grid-three"sv, grid_three);
	group.wrapper = *atlas.find(atlas.getUIPage(), "group");
	iconMap.insert_or_assign("group"sv, group);
	hamburger_button.wrapper = *atlas.find(atlas.getUIPage(), "hamburger-button");
	iconMap.insert_or_assign("hamburger-button"sv, hamburger_button);
	harm.wrapper = *atlas.find(atlas.getUIPage(), "harm");
	iconMap.insert_or_assign("harm"sv, harm);
	helpcenter.wrapper = *atlas.find(atlas.getUIPage(), "helpcenter");
	iconMap.insert_or_assign("helpcenter"sv, helpcenter);
	hexagon_one.wrapper = *atlas.find(atlas.getUIPage(), "hexagon-one");
	iconMap.insert_or_assign("hexagon-one"sv, hexagon_one);
	history.wrapper = *atlas.find(atlas.getUIPage(), "history");
	iconMap.insert_or_assign("history"sv, history);
	home.wrapper = *atlas.find(atlas.getUIPage(), "home");
	iconMap.insert_or_assign("home"sv, home);
	hourglass_full.wrapper = *atlas.find(atlas.getUIPage(), "hourglass-full");
	iconMap.insert_or_assign("hourglass-full"sv, hourglass_full);
	hourglass_null.wrapper = *atlas.find(atlas.getUIPage(), "hourglass-null");
	iconMap.insert_or_assign("hourglass-null"sv, hourglass_null);
	hourglass.wrapper = *atlas.find(atlas.getUIPage(), "hourglass");
	iconMap.insert_or_assign("hourglass"sv, hourglass);
	image_files.wrapper = *atlas.find(atlas.getUIPage(), "image-files");
	iconMap.insert_or_assign("image-files"sv, image_files);
	inbox_download_r.wrapper = *atlas.find(atlas.getUIPage(), "inbox-download-r");
	iconMap.insert_or_assign("inbox-download-r"sv, inbox_download_r);
	inbox_r.wrapper = *atlas.find(atlas.getUIPage(), "inbox-r");
	iconMap.insert_or_assign("inbox-r"sv, inbox_r);
	inbox_success_r.wrapper = *atlas.find(atlas.getUIPage(), "inbox-success-r");
	iconMap.insert_or_assign("inbox-success-r"sv, inbox_success_r);
	inbox_upload_r.wrapper = *atlas.find(atlas.getUIPage(), "inbox-upload-r");
	iconMap.insert_or_assign("inbox-upload-r"sv, inbox_upload_r);
	info.wrapper = *atlas.find(atlas.getUIPage(), "info");
	iconMap.insert_or_assign("info"sv, info);
	inner_shadow_bottom_left.wrapper = *atlas.find(atlas.getUIPage(), "inner-shadow-bottom-left");
	iconMap.insert_or_assign("inner-shadow-bottom-left"sv, inner_shadow_bottom_left);
	inner_shadow_bottom_right.wrapper = *atlas.find(atlas.getUIPage(), "inner-shadow-bottom-right");
	iconMap.insert_or_assign("inner-shadow-bottom-right"sv, inner_shadow_bottom_right);
	inner_shadow_down.wrapper = *atlas.find(atlas.getUIPage(), "inner-shadow-down");
	iconMap.insert_or_assign("inner-shadow-down"sv, inner_shadow_down);
	inner_shadow_left.wrapper = *atlas.find(atlas.getUIPage(), "inner-shadow-left");
	iconMap.insert_or_assign("inner-shadow-left"sv, inner_shadow_left);
	inner_shadow_right.wrapper = *atlas.find(atlas.getUIPage(), "inner-shadow-right");
	iconMap.insert_or_assign("inner-shadow-right"sv, inner_shadow_right);
	inner_shadow_top_left.wrapper = *atlas.find(atlas.getUIPage(), "inner-shadow-top-left");
	iconMap.insert_or_assign("inner-shadow-top-left"sv, inner_shadow_top_left);
	inner_shadow_top_right.wrapper = *atlas.find(atlas.getUIPage(), "inner-shadow-top-right");
	iconMap.insert_or_assign("inner-shadow-top-right"sv, inner_shadow_top_right);
	inner_shadow_up.wrapper = *atlas.find(atlas.getUIPage(), "inner-shadow-up");
	iconMap.insert_or_assign("inner-shadow-up"sv, inner_shadow_up);
	install.wrapper = *atlas.find(atlas.getUIPage(), "install");
	iconMap.insert_or_assign("install"sv, install);
	internal_data.wrapper = *atlas.find(atlas.getUIPage(), "internal-data");
	iconMap.insert_or_assign("internal-data"sv, internal_data);
	internal_transmission.wrapper = *atlas.find(atlas.getUIPage(), "internal-transmission");
	iconMap.insert_or_assign("internal-transmission"sv, internal_transmission);
	intersect_selection.wrapper = *atlas.find(atlas.getUIPage(), "intersect-selection");
	iconMap.insert_or_assign("intersect-selection"sv, intersect_selection);
	invalid_files.wrapper = *atlas.find(atlas.getUIPage(), "invalid-files");
	iconMap.insert_or_assign("invalid-files"sv, invalid_files);
	invert_left.wrapper = *atlas.find(atlas.getUIPage(), "invert-left");
	iconMap.insert_or_assign("invert-left"sv, invert_left);
	invert_right.wrapper = *atlas.find(atlas.getUIPage(), "invert-right");
	iconMap.insert_or_assign("invert-right"sv, invert_right);
	label.wrapper = *atlas.find(atlas.getUIPage(), "label");
	iconMap.insert_or_assign("label"sv, label);
	left_alignment.wrapper = *atlas.find(atlas.getUIPage(), "left-alignment");
	iconMap.insert_or_assign("left-alignment"sv, left_alignment);
	left_c.wrapper = *atlas.find(atlas.getUIPage(), "left-c");
	iconMap.insert_or_assign("left-c"sv, left_c);
	left_one.wrapper = *atlas.find(atlas.getUIPage(), "left-one");
	iconMap.insert_or_assign("left-one"sv, left_one);
	left_small_down.wrapper = *atlas.find(atlas.getUIPage(), "left-small-down");
	iconMap.insert_or_assign("left-small-down"sv, left_small_down);
	left_small_up.wrapper = *atlas.find(atlas.getUIPage(), "left-small-up");
	iconMap.insert_or_assign("left-small-up"sv, left_small_up);
	left_small.wrapper = *atlas.find(atlas.getUIPage(), "left-small");
	iconMap.insert_or_assign("left-small"sv, left_small);
	left_square.wrapper = *atlas.find(atlas.getUIPage(), "left-square");
	iconMap.insert_or_assign("left-square"sv, left_square);
	left.wrapper = *atlas.find(atlas.getUIPage(), "left");
	iconMap.insert_or_assign("left"sv, left);
	like.wrapper = *atlas.find(atlas.getUIPage(), "like");
	iconMap.insert_or_assign("like"sv, like);
	link_one.wrapper = *atlas.find(atlas.getUIPage(), "link-one");
	iconMap.insert_or_assign("link-one"sv, link_one);
	link_three.wrapper = *atlas.find(atlas.getUIPage(), "link-three");
	iconMap.insert_or_assign("link-three"sv, link_three);
	link_two.wrapper = *atlas.find(atlas.getUIPage(), "link-two");
	iconMap.insert_or_assign("link-two"sv, link_two);
	link.wrapper = *atlas.find(atlas.getUIPage(), "link");
	iconMap.insert_or_assign("link"sv, link);
	list_add.wrapper = *atlas.find(atlas.getUIPage(), "list-add");
	iconMap.insert_or_assign("list-add"sv, list_add);
	list_alphabet.wrapper = *atlas.find(atlas.getUIPage(), "list-alphabet");
	iconMap.insert_or_assign("list-alphabet"sv, list_alphabet);
	list_bottom.wrapper = *atlas.find(atlas.getUIPage(), "list-bottom");
	iconMap.insert_or_assign("list-bottom"sv, list_bottom);
	list_checkbox.wrapper = *atlas.find(atlas.getUIPage(), "list-checkbox");
	iconMap.insert_or_assign("list-checkbox"sv, list_checkbox);
	list_fail.wrapper = *atlas.find(atlas.getUIPage(), "list-fail");
	iconMap.insert_or_assign("list-fail"sv, list_fail);
	list_middle.wrapper = *atlas.find(atlas.getUIPage(), "list-middle");
	iconMap.insert_or_assign("list-middle"sv, list_middle);
	list_numbers.wrapper = *atlas.find(atlas.getUIPage(), "list-numbers");
	iconMap.insert_or_assign("list-numbers"sv, list_numbers);
	list_one.wrapper = *atlas.find(atlas.getUIPage(), "list-one");
	iconMap.insert_or_assign("list-one"sv, list_one);
	list_success.wrapper = *atlas.find(atlas.getUIPage(), "list-success");
	iconMap.insert_or_assign("list-success"sv, list_success);
	list_top.wrapper = *atlas.find(atlas.getUIPage(), "list-top");
	iconMap.insert_or_assign("list-top"sv, list_top);
	list_two.wrapper = *atlas.find(atlas.getUIPage(), "list-two");
	iconMap.insert_or_assign("list-two"sv, list_two);
	list_view.wrapper = *atlas.find(atlas.getUIPage(), "list-view");
	iconMap.insert_or_assign("list-view"sv, list_view);
	list.wrapper = *atlas.find(atlas.getUIPage(), "list");
	iconMap.insert_or_assign("list"sv, list);
	loading_four.wrapper = *atlas.find(atlas.getUIPage(), "loading-four");
	iconMap.insert_or_assign("loading-four"sv, loading_four);
	loading.wrapper = *atlas.find(atlas.getUIPage(), "loading");
	iconMap.insert_or_assign("loading"sv, loading);
	log.wrapper = *atlas.find(atlas.getUIPage(), "log");
	iconMap.insert_or_assign("log"sv, log);
	login.wrapper = *atlas.find(atlas.getUIPage(), "login");
	iconMap.insert_or_assign("login"sv, login);
	logout.wrapper = *atlas.find(atlas.getUIPage(), "logout");
	iconMap.insert_or_assign("logout"sv, logout);
	loop_once.wrapper = *atlas.find(atlas.getUIPage(), "loop-once");
	iconMap.insert_or_assign("loop-once"sv, loop_once);
	material.wrapper = *atlas.find(atlas.getUIPage(), "material");
	iconMap.insert_or_assign("material"sv, material);
	memory.wrapper = *atlas.find(atlas.getUIPage(), "memory");
	iconMap.insert_or_assign("memory"sv, memory);
	menu_fold_one.wrapper = *atlas.find(atlas.getUIPage(), "menu-fold-one");
	iconMap.insert_or_assign("menu-fold-one"sv, menu_fold_one);
	menu_fold.wrapper = *atlas.find(atlas.getUIPage(), "menu-fold");
	iconMap.insert_or_assign("menu-fold"sv, menu_fold);
	menu_unfold_one.wrapper = *atlas.find(atlas.getUIPage(), "menu-unfold-one");
	iconMap.insert_or_assign("menu-unfold-one"sv, menu_unfold_one);
	menu_unfold.wrapper = *atlas.find(atlas.getUIPage(), "menu-unfold");
	iconMap.insert_or_assign("menu-unfold"sv, menu_unfold);
	minus_selection.wrapper = *atlas.find(atlas.getUIPage(), "minus-selection");
	iconMap.insert_or_assign("minus-selection"sv, minus_selection);
	minus.wrapper = *atlas.find(atlas.getUIPage(), "minus");
	iconMap.insert_or_assign("minus"sv, minus);
	monitor_two.wrapper = *atlas.find(atlas.getUIPage(), "monitor-two");
	iconMap.insert_or_assign("monitor-two"sv, monitor_two);
	more_app.wrapper = *atlas.find(atlas.getUIPage(), "more-app");
	iconMap.insert_or_assign("more-app"sv, more_app);
	more_four.wrapper = *atlas.find(atlas.getUIPage(), "more-four");
	iconMap.insert_or_assign("more-four"sv, more_four);
	more_one.wrapper = *atlas.find(atlas.getUIPage(), "more-one");
	iconMap.insert_or_assign("more-one"sv, more_one);
	more_two.wrapper = *atlas.find(atlas.getUIPage(), "more-two");
	iconMap.insert_or_assign("more-two"sv, more_two);
	more.wrapper = *atlas.find(atlas.getUIPage(), "more");
	iconMap.insert_or_assign("more"sv, more);
	move_in.wrapper = *atlas.find(atlas.getUIPage(), "move-in");
	iconMap.insert_or_assign("move-in"sv, move_in);
	multi_circular.wrapper = *atlas.find(atlas.getUIPage(), "multi-circular");
	iconMap.insert_or_assign("multi-circular"sv, multi_circular);
	new_afferent.wrapper = *atlas.find(atlas.getUIPage(), "new-afferent");
	iconMap.insert_or_assign("new-afferent"sv, new_afferent);
	new_efferent.wrapper = *atlas.find(atlas.getUIPage(), "new-efferent");
	iconMap.insert_or_assign("new-efferent"sv, new_efferent);
	octagon.wrapper = *atlas.find(atlas.getUIPage(), "octagon");
	iconMap.insert_or_assign("octagon"sv, octagon);
	off_screen_one.wrapper = *atlas.find(atlas.getUIPage(), "off-screen-one");
	iconMap.insert_or_assign("off-screen-one"sv, off_screen_one);
	off_screen_two.wrapper = *atlas.find(atlas.getUIPage(), "off-screen-two");
	iconMap.insert_or_assign("off-screen-two"sv, off_screen_two);
	outgoing.wrapper = *atlas.find(atlas.getUIPage(), "outgoing");
	iconMap.insert_or_assign("outgoing"sv, outgoing);
	oval_one.wrapper = *atlas.find(atlas.getUIPage(), "oval-one");
	iconMap.insert_or_assign("oval-one"sv, oval_one);
	page_template.wrapper = *atlas.find(atlas.getUIPage(), "page-template");
	iconMap.insert_or_assign("page-template"sv, page_template);
	page.wrapper = *atlas.find(atlas.getUIPage(), "page");
	iconMap.insert_or_assign("page"sv, page);
	paragraph_break_two.wrapper = *atlas.find(atlas.getUIPage(), "paragraph-break-two");
	iconMap.insert_or_assign("paragraph-break-two"sv, paragraph_break_two);
	paragraph_round.wrapper = *atlas.find(atlas.getUIPage(), "paragraph-round");
	iconMap.insert_or_assign("paragraph-round"sv, paragraph_round);
	paragraph_triangle.wrapper = *atlas.find(atlas.getUIPage(), "paragraph-triangle");
	iconMap.insert_or_assign("paragraph-triangle"sv, paragraph_triangle);
	parallelogram.wrapper = *atlas.find(atlas.getUIPage(), "parallelogram");
	iconMap.insert_or_assign("parallelogram"sv, parallelogram);
	pause.wrapper = *atlas.find(atlas.getUIPage(), "pause");
	iconMap.insert_or_assign("pause"sv, pause);
	pay_code_one.wrapper = *atlas.find(atlas.getUIPage(), "pay-code-one");
	iconMap.insert_or_assign("pay-code-one"sv, pay_code_one);
	pentagon_one.wrapper = *atlas.find(atlas.getUIPage(), "pentagon-one");
	iconMap.insert_or_assign("pentagon-one"sv, pentagon_one);
	percentage.wrapper = *atlas.find(atlas.getUIPage(), "percentage");
	iconMap.insert_or_assign("percentage"sv, percentage);
	pic.wrapper = *atlas.find(atlas.getUIPage(), "pic");
	iconMap.insert_or_assign("pic"sv, pic);
	platte.wrapper = *atlas.find(atlas.getUIPage(), "platte");
	iconMap.insert_or_assign("platte"sv, platte);
	play_cycle.wrapper = *atlas.find(atlas.getUIPage(), "play-cycle");
	iconMap.insert_or_assign("play-cycle"sv, play_cycle);
	play_once.wrapper = *atlas.find(atlas.getUIPage(), "play-once");
	iconMap.insert_or_assign("play-once"sv, play_once);
	play_one.wrapper = *atlas.find(atlas.getUIPage(), "play-one");
	iconMap.insert_or_assign("play-one"sv, play_one);
	plus.wrapper = *atlas.find(atlas.getUIPage(), "plus");
	iconMap.insert_or_assign("plus"sv, plus);
	power.wrapper = *atlas.find(atlas.getUIPage(), "power");
	iconMap.insert_or_assign("power"sv, power);
	preview_open.wrapper = *atlas.find(atlas.getUIPage(), "preview-open");
	iconMap.insert_or_assign("preview-open"sv, preview_open);
	process_line.wrapper = *atlas.find(atlas.getUIPage(), "process-line");
	iconMap.insert_or_assign("process-line"sv, process_line);
	protect.wrapper = *atlas.find(atlas.getUIPage(), "protect");
	iconMap.insert_or_assign("protect"sv, protect);
	quadrilateral.wrapper = *atlas.find(atlas.getUIPage(), "quadrilateral");
	iconMap.insert_or_assign("quadrilateral"sv, quadrilateral);
	radiation.wrapper = *atlas.find(atlas.getUIPage(), "radiation");
	iconMap.insert_or_assign("radiation"sv, radiation);
	rectangle_one.wrapper = *atlas.find(atlas.getUIPage(), "rectangle-one");
	iconMap.insert_or_assign("rectangle-one"sv, rectangle_one);
	rectangle_small.wrapper = *atlas.find(atlas.getUIPage(), "rectangle-small");
	iconMap.insert_or_assign("rectangle-small"sv, rectangle_small);
	rectangle.wrapper = *atlas.find(atlas.getUIPage(), "rectangle");
	iconMap.insert_or_assign("rectangle"sv, rectangle);
	recycling_pool.wrapper = *atlas.find(atlas.getUIPage(), "recycling-pool");
	iconMap.insert_or_assign("recycling-pool"sv, recycling_pool);
	recycling.wrapper = *atlas.find(atlas.getUIPage(), "recycling");
	iconMap.insert_or_assign("recycling"sv, recycling);
	redo.wrapper = *atlas.find(atlas.getUIPage(), "redo");
	iconMap.insert_or_assign("redo"sv, redo);
	refresh_one.wrapper = *atlas.find(atlas.getUIPage(), "refresh-one");
	iconMap.insert_or_assign("refresh-one"sv, refresh_one);
	refresh.wrapper = *atlas.find(atlas.getUIPage(), "refresh");
	iconMap.insert_or_assign("refresh"sv, refresh);
	reject.wrapper = *atlas.find(atlas.getUIPage(), "reject");
	iconMap.insert_or_assign("reject"sv, reject);
	right_angle.wrapper = *atlas.find(atlas.getUIPage(), "right-angle");
	iconMap.insert_or_assign("right-angle"sv, right_angle);
	right_bar.wrapper = *atlas.find(atlas.getUIPage(), "right-bar");
	iconMap.insert_or_assign("right-bar"sv, right_bar);
	right_c.wrapper = *atlas.find(atlas.getUIPage(), "right-c");
	iconMap.insert_or_assign("right-c"sv, right_c);
	right_expand.wrapper = *atlas.find(atlas.getUIPage(), "right-expand");
	iconMap.insert_or_assign("right-expand"sv, right_expand);
	right_one.wrapper = *atlas.find(atlas.getUIPage(), "right-one");
	iconMap.insert_or_assign("right-one"sv, right_one);
	right_small_down.wrapper = *atlas.find(atlas.getUIPage(), "right-small-down");
	iconMap.insert_or_assign("right-small-down"sv, right_small_down);
	right_small_up.wrapper = *atlas.find(atlas.getUIPage(), "right-small-up");
	iconMap.insert_or_assign("right-small-up"sv, right_small_up);
	right_small.wrapper = *atlas.find(atlas.getUIPage(), "right-small");
	iconMap.insert_or_assign("right-small"sv, right_small);
	right_square.wrapper = *atlas.find(atlas.getUIPage(), "right-square");
	iconMap.insert_or_assign("right-square"sv, right_square);
	right_two.wrapper = *atlas.find(atlas.getUIPage(), "right-two");
	iconMap.insert_or_assign("right-two"sv, right_two);
	right.wrapper = *atlas.find(atlas.getUIPage(), "right");
	iconMap.insert_or_assign("right"sv, right);
	ripple.wrapper = *atlas.find(atlas.getUIPage(), "ripple");
	iconMap.insert_or_assign("ripple"sv, ripple);
	rotate.wrapper = *atlas.find(atlas.getUIPage(), "rotate");
	iconMap.insert_or_assign("rotate"sv, rotate);
	rotation_horizontal.wrapper = *atlas.find(atlas.getUIPage(), "rotation-horizontal");
	iconMap.insert_or_assign("rotation-horizontal"sv, rotation_horizontal);
	rotation_vertical.wrapper = *atlas.find(atlas.getUIPage(), "rotation-vertical");
	iconMap.insert_or_assign("rotation-vertical"sv, rotation_vertical);
	rotation.wrapper = *atlas.find(atlas.getUIPage(), "rotation");
	iconMap.insert_or_assign("rotation"sv, rotation);
	round_caliper.wrapper = *atlas.find(atlas.getUIPage(), "round-caliper");
	iconMap.insert_or_assign("round-caliper"sv, round_caliper);
	round.wrapper = *atlas.find(atlas.getUIPage(), "round");
	iconMap.insert_or_assign("round"sv, round);
	rss.wrapper = *atlas.find(atlas.getUIPage(), "rss");
	iconMap.insert_or_assign("rss"sv, rss);
	ruler.wrapper = *atlas.find(atlas.getUIPage(), "ruler");
	iconMap.insert_or_assign("ruler"sv, ruler);
	s_turn_left.wrapper = *atlas.find(atlas.getUIPage(), "s-turn-left");
	iconMap.insert_or_assign("s-turn-left"sv, s_turn_left);
	save_one.wrapper = *atlas.find(atlas.getUIPage(), "save-one");
	iconMap.insert_or_assign("save-one"sv, save_one);
	save.wrapper = *atlas.find(atlas.getUIPage(), "save");
	iconMap.insert_or_assign("save"sv, save);
	scan_code.wrapper = *atlas.find(atlas.getUIPage(), "scan-code");
	iconMap.insert_or_assign("scan-code"sv, scan_code);
	scan_setting.wrapper = *atlas.find(atlas.getUIPage(), "scan-setting");
	iconMap.insert_or_assign("scan-setting"sv, scan_setting);
	scan.wrapper = *atlas.find(atlas.getUIPage(), "scan");
	iconMap.insert_or_assign("scan"sv, scan);
	scanning_two.wrapper = *atlas.find(atlas.getUIPage(), "scanning-two");
	iconMap.insert_or_assign("scanning-two"sv, scanning_two);
	scanning.wrapper = *atlas.find(atlas.getUIPage(), "scanning");
	iconMap.insert_or_assign("scanning"sv, scanning);
	scatter_alignment.wrapper = *atlas.find(atlas.getUIPage(), "scatter-alignment");
	iconMap.insert_or_assign("scatter-alignment"sv, scatter_alignment);
	search.wrapper = *atlas.find(atlas.getUIPage(), "search");
	iconMap.insert_or_assign("search"sv, search);
	selected_focus.wrapper = *atlas.find(atlas.getUIPage(), "selected-focus");
	iconMap.insert_or_assign("selected-focus"sv, selected_focus);
	send_one.wrapper = *atlas.find(atlas.getUIPage(), "send-one");
	iconMap.insert_or_assign("send-one"sv, send_one);
	seo_folder.wrapper = *atlas.find(atlas.getUIPage(), "seo-folder");
	iconMap.insert_or_assign("seo-folder"sv, seo_folder);
	setting_one.wrapper = *atlas.find(atlas.getUIPage(), "setting-one");
	iconMap.insert_or_assign("setting-one"sv, setting_one);
	setting_two.wrapper = *atlas.find(atlas.getUIPage(), "setting-two");
	iconMap.insert_or_assign("setting-two"sv, setting_two);
	share_one.wrapper = *atlas.find(atlas.getUIPage(), "share-one");
	iconMap.insert_or_assign("share-one"sv, share_one);
	share_three.wrapper = *atlas.find(atlas.getUIPage(), "share-three");
	iconMap.insert_or_assign("share-three"sv, share_three);
	share.wrapper = *atlas.find(atlas.getUIPage(), "share");
	iconMap.insert_or_assign("share"sv, share);
	shield_add.wrapper = *atlas.find(atlas.getUIPage(), "shield-add");
	iconMap.insert_or_assign("shield-add"sv, shield_add);
	shield.wrapper = *atlas.find(atlas.getUIPage(), "shield");
	iconMap.insert_or_assign("shield"sv, shield);
	shuffle_one.wrapper = *atlas.find(atlas.getUIPage(), "shuffle-one");
	iconMap.insert_or_assign("shuffle-one"sv, shuffle_one);
	shuffle.wrapper = *atlas.find(atlas.getUIPage(), "shuffle");
	iconMap.insert_or_assign("shuffle"sv, shuffle);
	signal_one.wrapper = *atlas.find(atlas.getUIPage(), "signal-one");
	iconMap.insert_or_assign("signal-one"sv, signal_one);
	signal.wrapper = *atlas.find(atlas.getUIPage(), "signal");
	iconMap.insert_or_assign("signal"sv, signal);
	six_circular_connection.wrapper = *atlas.find(atlas.getUIPage(), "six-circular-connection");
	iconMap.insert_or_assign("six-circular-connection"sv, six_circular_connection);
	six_points.wrapper = *atlas.find(atlas.getUIPage(), "six-points");
	iconMap.insert_or_assign("six-points"sv, six_points);
	sliding_horizontal.wrapper = *atlas.find(atlas.getUIPage(), "sliding-horizontal");
	iconMap.insert_or_assign("sliding-horizontal"sv, sliding_horizontal);
	sliding_vertical.wrapper = *atlas.find(atlas.getUIPage(), "sliding-vertical");
	iconMap.insert_or_assign("sliding-vertical"sv, sliding_vertical);
	smart_optimization.wrapper = *atlas.find(atlas.getUIPage(), "smart-optimization");
	iconMap.insert_or_assign("smart-optimization"sv, smart_optimization);
	sort_four.wrapper = *atlas.find(atlas.getUIPage(), "sort-four");
	iconMap.insert_or_assign("sort-four"sv, sort_four);
	sort_one.wrapper = *atlas.find(atlas.getUIPage(), "sort-one");
	iconMap.insert_or_assign("sort-one"sv, sort_one);
	sort_three.wrapper = *atlas.find(atlas.getUIPage(), "sort-three");
	iconMap.insert_or_assign("sort-three"sv, sort_three);
	sort_two.wrapper = *atlas.find(atlas.getUIPage(), "sort-two");
	iconMap.insert_or_assign("sort-two"sv, sort_two);
	sort.wrapper = *atlas.find(atlas.getUIPage(), "sort");
	iconMap.insert_or_assign("sort"sv, sort);
	sphere.wrapper = *atlas.find(atlas.getUIPage(), "sphere");
	iconMap.insert_or_assign("sphere"sv, sphere);
	split.wrapper = *atlas.find(atlas.getUIPage(), "split");
	iconMap.insert_or_assign("split"sv, split);
	square_small.wrapper = *atlas.find(atlas.getUIPage(), "square-small");
	iconMap.insert_or_assign("square-small"sv, square_small);
	square.wrapper = *atlas.find(atlas.getUIPage(), "square");
	iconMap.insert_or_assign("square"sv, square);
	subtract_selection_one.wrapper = *atlas.find(atlas.getUIPage(), "subtract-selection-one");
	iconMap.insert_or_assign("subtract-selection-one"sv, subtract_selection_one);
	subtract_selection.wrapper = *atlas.find(atlas.getUIPage(), "subtract-selection");
	iconMap.insert_or_assign("subtract-selection"sv, subtract_selection);
	success_picture.wrapper = *atlas.find(atlas.getUIPage(), "success-picture");
	iconMap.insert_or_assign("success-picture"sv, success_picture);
	sum.wrapper = *atlas.find(atlas.getUIPage(), "sum");
	iconMap.insert_or_assign("sum"sv, sum);
	switch_arrow.wrapper = *atlas.find(atlas.getUIPage(), "switch-arrow");
	iconMap.insert_or_assign("switch-arrow"sv, switch_arrow);
	switch_button.wrapper = *atlas.find(atlas.getUIPage(), "switch-button");
	iconMap.insert_or_assign("switch-button"sv, switch_button);
	symbol.wrapper = *atlas.find(atlas.getUIPage(), "symbol");
	iconMap.insert_or_assign("symbol"sv, symbol);
	sync.wrapper = *atlas.find(atlas.getUIPage(), "sync");
	iconMap.insert_or_assign("sync"sv, sync);
	system.wrapper = *atlas.find(atlas.getUIPage(), "system");
	iconMap.insert_or_assign("system"sv, system);
	table_file.wrapper = *atlas.find(atlas.getUIPage(), "table-file");
	iconMap.insert_or_assign("table-file"sv, table_file);
	tag_one.wrapper = *atlas.find(atlas.getUIPage(), "tag-one");
	iconMap.insert_or_assign("tag-one"sv, tag_one);
	tag.wrapper = *atlas.find(atlas.getUIPage(), "tag");
	iconMap.insert_or_assign("tag"sv, tag);
	target.wrapper = *atlas.find(atlas.getUIPage(), "target");
	iconMap.insert_or_assign("target"sv, target);
	terminal.wrapper = *atlas.find(atlas.getUIPage(), "terminal");
	iconMap.insert_or_assign("terminal"sv, terminal);
	termination_file.wrapper = *atlas.find(atlas.getUIPage(), "termination-file");
	iconMap.insert_or_assign("termination-file"sv, termination_file);
	text_recognition.wrapper = *atlas.find(atlas.getUIPage(), "text-recognition");
	iconMap.insert_or_assign("text-recognition"sv, text_recognition);
	texture.wrapper = *atlas.find(atlas.getUIPage(), "texture");
	iconMap.insert_or_assign("texture"sv, texture);
	thermometer.wrapper = *atlas.find(atlas.getUIPage(), "thermometer");
	iconMap.insert_or_assign("thermometer"sv, thermometer);
	three_hexagons.wrapper = *atlas.find(atlas.getUIPage(), "three-hexagons");
	iconMap.insert_or_assign("three-hexagons"sv, three_hexagons);
	time.wrapper = *atlas.find(atlas.getUIPage(), "time");
	iconMap.insert_or_assign("time"sv, time);
	to_bottom_one.wrapper = *atlas.find(atlas.getUIPage(), "to-bottom-one");
	iconMap.insert_or_assign("to-bottom-one"sv, to_bottom_one);
	to_bottom.wrapper = *atlas.find(atlas.getUIPage(), "to-bottom");
	iconMap.insert_or_assign("to-bottom"sv, to_bottom);
	to_left.wrapper = *atlas.find(atlas.getUIPage(), "to-left");
	iconMap.insert_or_assign("to-left"sv, to_left);
	to_right.wrapper = *atlas.find(atlas.getUIPage(), "to-right");
	iconMap.insert_or_assign("to-right"sv, to_right);
	to_top_one.wrapper = *atlas.find(atlas.getUIPage(), "to-top-one");
	iconMap.insert_or_assign("to-top-one"sv, to_top_one);
	to_top.wrapper = *atlas.find(atlas.getUIPage(), "to-top");
	iconMap.insert_or_assign("to-top"sv, to_top);
	tool.wrapper = *atlas.find(atlas.getUIPage(), "tool");
	iconMap.insert_or_assign("tool"sv, tool);
	transaction.wrapper = *atlas.find(atlas.getUIPage(), "transaction");
	iconMap.insert_or_assign("transaction"sv, transaction);
	transfer_data.wrapper = *atlas.find(atlas.getUIPage(), "transfer-data");
	iconMap.insert_or_assign("transfer-data"sv, transfer_data);
	transform.wrapper = *atlas.find(atlas.getUIPage(), "transform");
	iconMap.insert_or_assign("transform"sv, transform);
	translate.wrapper = *atlas.find(atlas.getUIPage(), "translate");
	iconMap.insert_or_assign("translate"sv, translate);
	trapezoid.wrapper = *atlas.find(atlas.getUIPage(), "trapezoid");
	iconMap.insert_or_assign("trapezoid"sv, trapezoid);
	tree_diagram.wrapper = *atlas.find(atlas.getUIPage(), "tree-diagram");
	iconMap.insert_or_assign("tree-diagram"sv, tree_diagram);
	tree_list.wrapper = *atlas.find(atlas.getUIPage(), "tree-list");
	iconMap.insert_or_assign("tree-list"sv, tree_list);
	trending_down.wrapper = *atlas.find(atlas.getUIPage(), "trending-down");
	iconMap.insert_or_assign("trending-down"sv, trending_down);
	trending_up.wrapper = *atlas.find(atlas.getUIPage(), "trending-up");
	iconMap.insert_or_assign("trending-up"sv, trending_up);
	triangle.wrapper = *atlas.find(atlas.getUIPage(), "triangle");
	iconMap.insert_or_assign("triangle"sv, triangle);
	two_dimensional_code_one.wrapper = *atlas.find(atlas.getUIPage(), "two-dimensional-code-one");
	iconMap.insert_or_assign("two-dimensional-code-one"sv, two_dimensional_code_one);
	two_dimensional_code_two.wrapper = *atlas.find(atlas.getUIPage(), "two-dimensional-code-two");
	iconMap.insert_or_assign("two-dimensional-code-two"sv, two_dimensional_code_two);
	undo.wrapper = *atlas.find(atlas.getUIPage(), "undo");
	iconMap.insert_or_assign("undo"sv, undo);
	union_selection.wrapper = *atlas.find(atlas.getUIPage(), "union-selection");
	iconMap.insert_or_assign("union-selection"sv, union_selection);
	unlink.wrapper = *atlas.find(atlas.getUIPage(), "unlink");
	iconMap.insert_or_assign("unlink"sv, unlink);
	up_one.wrapper = *atlas.find(atlas.getUIPage(), "up-one");
	iconMap.insert_or_assign("up-one"sv, up_one);
	up_small.wrapper = *atlas.find(atlas.getUIPage(), "up-small");
	iconMap.insert_or_assign("up-small"sv, up_small);
	up_square.wrapper = *atlas.find(atlas.getUIPage(), "up-square");
	iconMap.insert_or_assign("up-square"sv, up_square);
	up.wrapper = *atlas.find(atlas.getUIPage(), "up");
	iconMap.insert_or_assign("up"sv, up);
	upload_picture.wrapper = *atlas.find(atlas.getUIPage(), "upload-picture");
	iconMap.insert_or_assign("upload-picture"sv, upload_picture);
	upload_web.wrapper = *atlas.find(atlas.getUIPage(), "upload-web");
	iconMap.insert_or_assign("upload-web"sv, upload_web);
	upload.wrapper = *atlas.find(atlas.getUIPage(), "upload");
	iconMap.insert_or_assign("upload"sv, upload);
	video_file.wrapper = *atlas.find(atlas.getUIPage(), "video-file");
	iconMap.insert_or_assign("video-file"sv, video_file);
	waterfalls_h.wrapper = *atlas.find(atlas.getUIPage(), "waterfalls-h");
	iconMap.insert_or_assign("waterfalls-h"sv, waterfalls_h);
	waterfalls_v.wrapper = *atlas.find(atlas.getUIPage(), "waterfalls-v");
	iconMap.insert_or_assign("waterfalls-v"sv, waterfalls_v);
	waves_left.wrapper = *atlas.find(atlas.getUIPage(), "waves-left");
	iconMap.insert_or_assign("waves-left"sv, waves_left);
	waves_right.wrapper = *atlas.find(atlas.getUIPage(), "waves-right");
	iconMap.insert_or_assign("waves-right"sv, waves_right);
	web_page.wrapper = *atlas.find(atlas.getUIPage(), "web-page");
	iconMap.insert_or_assign("web-page"sv, web_page);
	wifi.wrapper = *atlas.find(atlas.getUIPage(), "wifi");
	iconMap.insert_or_assign("wifi"sv, wifi);
	workbench.wrapper = *atlas.find(atlas.getUIPage(), "workbench");
	iconMap.insert_or_assign("workbench"sv, workbench);
	zoom_in.wrapper = *atlas.find(atlas.getUIPage(), "zoom-in");
	iconMap.insert_or_assign("zoom-in"sv, zoom_in);
	zoom_internal.wrapper = *atlas.find(atlas.getUIPage(), "zoom-internal");
	iconMap.insert_or_assign("zoom-internal"sv, zoom_internal);
	zoom_out.wrapper = *atlas.find(atlas.getUIPage(), "zoom-out");
	iconMap.insert_or_assign("zoom-out"sv, zoom_out);
}
}
